{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Fast X Fourier","text":"<p>\u0e40\u0e27\u0e47\u0e1a\u0e44\u0e0b\u0e15\u0e4c\u0e02\u0e2d\u0e07\u0e40\u0e23\u0e32\u0e04\u0e37\u0e2d\u0e41\u0e2b\u0e25\u0e48\u0e07\u0e23\u0e27\u0e21\u0e40\u0e09\u0e25\u0e22\u0e42\u0e08\u0e17\u0e22\u0e4c\u0e41\u0e02\u0e48\u0e07\u0e02\u0e31\u0e19 TOI \u0e23\u0e27\u0e21\u0e16\u0e36\u0e07\u0e42\u0e08\u0e17\u0e22\u0e4c\u0e41\u0e02\u0e48\u0e07\u0e02\u0e31\u0e19\u0e2d\u0e37\u0e48\u0e19 \u0e46 \u0e43\u0e2b\u0e49\u0e1f\u0e23\u0e35! \u0e40\u0e23\u0e32\u0e15\u0e31\u0e49\u0e07\u0e43\u0e08\u0e08\u0e31\u0e14\u0e17\u0e33\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e0a\u0e48\u0e27\u0e22\u0e43\u0e2b\u0e49\u0e17\u0e38\u0e01 \u0e46 \u0e04\u0e19\u0e44\u0e14\u0e49\u0e40\u0e23\u0e35\u0e22\u0e19\u0e23\u0e39\u0e49\u0e41\u0e25\u0e30\u0e40\u0e15\u0e23\u0e35\u0e22\u0e21\u0e15\u0e31\u0e27\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e41\u0e02\u0e48\u0e07\u0e02\u0e31\u0e19\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e21\u0e35\u0e1b\u0e23\u0e30\u0e2a\u0e34\u0e17\u0e18\u0e34\u0e20\u0e32\u0e1e \u0e17\u0e38\u0e01\u0e1a\u0e17\u0e40\u0e09\u0e25\u0e22\u0e40\u0e02\u0e35\u0e22\u0e19\u0e14\u0e49\u0e27\u0e22\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22 \u0e40\u0e02\u0e49\u0e32\u0e43\u0e08\u0e07\u0e48\u0e32\u0e22 \u0e1e\u0e23\u0e49\u0e2d\u0e21\u0e2d\u0e18\u0e34\u0e1a\u0e32\u0e22\u0e41\u0e19\u0e27\u0e04\u0e34\u0e14\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e25\u0e30\u0e40\u0e2d\u0e35\u0e22\u0e14 \u0e44\u0e21\u0e48\u0e27\u0e48\u0e32\u0e04\u0e38\u0e13\u0e08\u0e30\u0e01\u0e33\u0e25\u0e31\u0e07\u0e40\u0e23\u0e34\u0e48\u0e21\u0e15\u0e49\u0e19 \u0e2b\u0e23\u0e37\u0e2d\u0e2d\u0e22\u0e32\u0e01\u0e17\u0e1a\u0e17\u0e27\u0e19\u0e42\u0e08\u0e17\u0e22\u0e4c\u0e22\u0e32\u0e01 \u0e46 \u2014 \u0e40\u0e23\u0e32\u0e1e\u0e23\u0e49\u0e2d\u0e21\u0e0a\u0e48\u0e27\u0e22\u0e04\u0e38\u0e13\u0e40\u0e2a\u0e21\u0e2d</p> <p>\u0e28\u0e36\u0e01\u0e29\u0e32\u0e42\u0e08\u0e17\u0e22\u0e4c: Click Here \u0e28\u0e36\u0e01\u0e29\u0e32\u0e2d\u0e31\u0e25\u0e01\u0e2d\u0e23\u0e34\u0e17\u0e36\u0e21: Click Here</p>"},{"location":"algorithms/","title":"Algorithms","text":"Tags \u2b07\ufe0f Difficulty:  Easy  Medium  Hard Topics:  Graph Algorithms  Dynamic Programming  Data Structures"},{"location":"algorithms/#bitmask-dp","title":"Bitmask DP","text":"<p>Difficulty: <code>Hard</code></p> Topics <ul> <li><code>Dynamic Programming</code></li> </ul> <p>View Solution</p>"},{"location":"algorithms/bitmask-dp/","title":"Bitmask DP","text":""},{"location":"others/","title":"Others","text":""},{"location":"others/#1-2568","title":"\u0e40\u0e09\u0e25\u0e22\u0e02\u0e49\u0e2d\u0e2a\u0e2d\u0e1a \u0e2a\u0e2d\u0e27\u0e19.\u0e04\u0e2d\u0e21\u0e1e\u0e34\u0e27\u0e40\u0e15\u0e2d\u0e23\u0e4c \u0e04\u0e31\u0e14\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e40\u0e02\u0e49\u0e32\u0e04\u0e48\u0e32\u0e22 1 \u0e1b\u0e35\u0e01\u0e32\u0e23\u0e28\u0e36\u0e01\u0e29\u0e32 2568","text":"<p>View Solution</p>"},{"location":"others/posn1-2568/","title":"\u0e40\u0e09\u0e25\u0e22\u0e02\u0e49\u0e2d\u0e2a\u0e2d\u0e1a \u0e2a\u0e2d\u0e27\u0e19.\u0e04\u0e2d\u0e21\u0e1e\u0e34\u0e27\u0e40\u0e15\u0e2d\u0e23\u0e4c \u0e04\u0e31\u0e14\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e40\u0e02\u0e49\u0e32\u0e04\u0e48\u0e32\u0e22 1 \u0e1b\u0e35\u0e01\u0e32\u0e23\u0e28\u0e36\u0e01\u0e29\u0e32 2568","text":"<p>Click here to download</p> <p>\u0e2b\u0e32\u0e01\u0e21\u0e35\u0e02\u0e49\u0e2d\u0e2a\u0e07\u0e2a\u0e31\u0e22 comment \u0e44\u0e27\u0e49\u0e43\u0e15\u0e49 post \u0e44\u0e14\u0e49\u0e40\u0e25\u0e22\u0e19\u0e30\u0e04\u0e23\u0e31\u0e1a \ud83d\ude47\u200d\u2642\ufe0f\ud83d\ude47\u200d\u2642\ufe0f</p>"},{"location":"problems/","title":"Problems","text":"Tags \u2b07\ufe0f Difficulty:  Easy  Medium  Hard Source:  TOI Topics:  Disjoint Set Union  Dynamic Programming  Bitmask  Data Structures"},{"location":"problems/#toi21_duty_free","title":"toi21_duty_free","text":"<p>Difficulty: <code>Hard</code></p> <p>Source: <code>TOI</code></p> Topics <ul> <li><code>Disjoint Set Union</code></li> </ul> <p>View Solution</p>"},{"location":"problems/#bitmask-dp-toi20_bit_string","title":"Bitmask DP &amp; toi20_bit_string","text":"<p>Difficulty: <code>Easy</code></p> <p>Source: <code>TOI</code></p> Topics <ul> <li><code>Dynamic Programming</code></li> <li><code>Bitmask</code></li> </ul> <p>View Solution</p>"},{"location":"problems/#toi20_orbs","title":"toi20_orbs","text":"<p>Difficulty: <code>Easy</code></p> <p>Source: <code>TOI</code></p> Topics <ul> <li><code>Data Structures</code></li> </ul> <p>View Solution</p>"},{"location":"problems/posn1_67_bkk_p1/","title":"\u0e02\u0e49\u0e2d\u0e2a\u0e2d\u0e1a\u0e17\u0e49\u0e32\u0e22\u0e04\u0e48\u0e32\u0e22 1 \u0e28\u0e39\u0e19\u0e22\u0e4c \u0e2a\u0e2d\u0e27\u0e19.\u0e01\u0e23\u0e38\u0e07\u0e40\u0e17\u0e1e\u0e21\u0e2b\u0e32\u0e19\u0e04\u0e23 \u0e1b\u0e35 2567 \u0e02\u0e49\u0e2d\u0e17\u0e35\u0e48 1","text":""},{"location":"problems/posn1_67_bkk_p1/#problem","title":"Problem","text":""},{"location":"problems/posn1_67_bkk_p1/#_1","title":"\u0e2a\u0e23\u0e38\u0e1b\u0e42\u0e08\u0e17\u0e22\u0e4c","text":"<p>\u0e40\u0e23\u0e32\u0e21\u0e35 String \u0e17\u0e35\u0e48\u0e1b\u0e23\u0e30\u0e01\u0e2d\u0e1a\u0e14\u0e49\u0e27\u0e22\u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23\u0e20\u0e32\u0e29\u0e32\u0e2d\u0e31\u0e07\u0e01\u0e24\u0e29 1 String \u0e41\u0e25\u0e49\u0e27\u0e40\u0e23\u0e32\u0e15\u0e49\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e2b\u0e32\u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23\u0e41\u0e15\u0e48\u0e25\u0e30\u0e15\u0e31\u0e27\u0e43\u0e19 String \u0e19\u0e31\u0e49\u0e19 \u0e40\u0e23\u0e35\u0e22\u0e07\u0e08\u0e32\u0e01\u0e15\u0e31\u0e27\u0e1e\u0e34\u0e21\u0e1e\u0e4c\u0e43\u0e2b\u0e0d\u0e48\u0e01\u0e48\u0e2d\u0e19\u0e15\u0e31\u0e27\u0e1e\u0e34\u0e21\u0e1e\u0e4c\u0e40\u0e25\u0e47\u0e01 \u0e41\u0e25\u0e49\u0e27\u0e40\u0e23\u0e35\u0e22\u0e07\u0e15\u0e32\u0e21\u0e25\u0e33\u0e14\u0e31\u0e1a\u0e1e\u0e08\u0e19\u0e32\u0e19\u0e38\u0e01\u0e23\u0e21</p>"},{"location":"problems/posn1_67_bkk_p1/#_2","title":"\u0e2a\u0e34\u0e48\u0e07\u0e17\u0e35\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e17\u0e33","text":"<p>\u0e40\u0e02\u0e35\u0e22\u0e19\u0e42\u0e04\u0e49\u0e14\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e40\u0e23\u0e35\u0e22\u0e07\u0e25\u0e33\u0e14\u0e31\u0e1a String \u0e15\u0e32\u0e21\u0e40\u0e07\u0e37\u0e48\u0e2d\u0e19\u0e44\u0e02\u0e02\u0e2d\u0e07\u0e42\u0e08\u0e17\u0e22\u0e4c</p> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07</p> Input Output ILOVECOMPUTERJa C E I J L M O P R T U V a myNameis N a e i m s y <p>Prerequisites</p> <ul> <li>Sortings</li> </ul>"},{"location":"problems/posn1_67_bkk_p1/#solution","title":"Solution","text":""},{"location":"problems/posn1_67_bkk_p1/#_3","title":"\u0e27\u0e34\u0e18\u0e35\u0e17\u0e33","text":"<p>\u0e23\u0e31\u0e1a Input \u0e21\u0e32\u0e40\u0e1b\u0e47\u0e19 String \u0e41\u0e25\u0e49\u0e27\u0e01\u0e47\u0e41\u0e04\u0e48\u0e17\u0e33\u0e01\u0e32\u0e23 Sort \u0e15\u0e23\u0e07\u0e46\u0e40\u0e25\u0e22 \u0e42\u0e14\u0e22\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e02\u0e49\u0e2d\u0e19\u0e35\u0e49 \u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e43\u0e0a\u0e49\u0e2d\u0e31\u0e25\u0e01\u0e2d\u0e23\u0e34\u0e17\u0e36\u0e21\u0e01\u0e32\u0e23\u0e40\u0e23\u0e35\u0e22\u0e07\u0e25\u0e33\u0e14\u0e31\u0e1a\u0e41\u0e1a\u0e1a\u0e43\u0e14\u0e01\u0e47\u0e44\u0e14\u0e49 \u0e44\u0e21\u0e48\u0e27\u0e48\u0e32\u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19 Bubble Sort, Insertion Sort, Selection Sort, \u0e2f\u0e25\u0e2f</p>"},{"location":"problems/posn1_67_bkk_p1/#code","title":"Code","text":"string_sorting.c<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nint main() {\n    char str[35];\n    scanf(\"%s\", str);\n    int n = strlen(str);\n    for (int i = 0; i &lt; n; i++) {\n        for (int j = 0; j &lt; n - 1; j++) {\n            if (str[j] &gt; str[j + 1]) {\n                char temp = str[j];\n                str[j] = str[j + 1];\n                str[j + 1] = temp;\n            }\n        }\n    }\n    printf(\"%c \", str[0]);\n    for (int i = 1; i &lt; n; i++) {\n        if (str[i] == str[i - 1]) continue;\n        printf(\"%c \", str[i]);\n    }\n}\n</code></pre> <p>\u0e2b\u0e32\u0e01\u0e21\u0e35\u0e02\u0e49\u0e2d\u0e2a\u0e07\u0e2a\u0e31\u0e22 comment \u0e44\u0e27\u0e49\u0e43\u0e15\u0e49 post \u0e44\u0e14\u0e49\u0e40\u0e25\u0e22\u0e19\u0e30\u0e04\u0e23\u0e31\u0e1a \ud83d\ude47\u200d\u2642\ufe0f\ud83d\ude47\u200d\u2642\ufe0f  </p>"},{"location":"problems/posn1_67_bkk_p2/","title":"\u0e02\u0e49\u0e2d\u0e2a\u0e2d\u0e1a\u0e17\u0e49\u0e32\u0e22\u0e04\u0e48\u0e32\u0e22 1 \u0e28\u0e39\u0e19\u0e22\u0e4c \u0e2a\u0e2d\u0e27\u0e19.\u0e01\u0e23\u0e38\u0e07\u0e40\u0e17\u0e1e\u0e21\u0e2b\u0e32\u0e19\u0e04\u0e23 \u0e1b\u0e35 2567 \u0e02\u0e49\u0e2d\u0e17\u0e35\u0e48 2","text":""},{"location":"problems/posn1_67_bkk_p2/#problem","title":"Problem","text":""},{"location":"problems/posn1_67_bkk_p2/#_1","title":"\u0e2a\u0e23\u0e38\u0e1b\u0e42\u0e08\u0e17\u0e22\u0e4c","text":"<p>\u0e40\u0e23\u0e32\u0e21\u0e35 String \u0e08\u0e33\u0e19\u0e27\u0e19 2 \u0e2d\u0e31\u0e19 \u0e41\u0e25\u0e30\u0e40\u0e23\u0e32\u0e15\u0e49\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e2b\u0e32\u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23\u0e17\u0e35\u0e48\u0e0b\u0e49\u0e33\u0e01\u0e31\u0e19 (\u0e15\u0e49\u0e2d\u0e07\u0e40\u0e1b\u0e47\u0e19\u0e15\u0e31\u0e27\u0e1e\u0e34\u0e21\u0e1e\u0e4c\u0e40\u0e25\u0e47\u0e01-\u0e1e\u0e34\u0e21\u0e1e\u0e4c\u0e43\u0e2b\u0e0d\u0e48\u0e40\u0e2b\u0e21\u0e37\u0e2d\u0e19\u0e01\u0e31\u0e19\u0e14\u0e49\u0e27\u0e22)</p>"},{"location":"problems/posn1_67_bkk_p2/#_2","title":"\u0e2a\u0e34\u0e48\u0e07\u0e17\u0e35\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e17\u0e33","text":"<p>\u0e40\u0e02\u0e35\u0e22\u0e19\u0e42\u0e04\u0e49\u0e14\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e2b\u0e32\u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23\u0e17\u0e35\u0e48\u0e0b\u0e49\u0e33\u0e01\u0e31\u0e19</p> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07</p> Input Output PHYSICSMATHCOMPUTER C M P T agodinCARbookontable a o n <p>Prerequisites</p> <ul> <li>Arrays</li> </ul>"},{"location":"problems/posn1_67_bkk_p2/#solution","title":"Solution","text":""},{"location":"problems/posn1_67_bkk_p2/#1-brute-force","title":"\u0e27\u0e34\u0e18\u0e35\u0e17\u0e33\u0e17\u0e35\u0e48 1 (Brute Force)","text":"<p>\u0e23\u0e31\u0e1a Input \u0e40\u0e02\u0e49\u0e32\u0e21\u0e32 \u0e41\u0e25\u0e49\u0e27\u0e40\u0e23\u0e32\u0e08\u0e30 Loop \u0e15\u0e32\u0e21\u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23\u0e41\u0e15\u0e48\u0e25\u0e30\u0e15\u0e31\u0e27\u0e43\u0e19 String \u0e41\u0e23\u0e01 \u0e0b\u0e36\u0e48\u0e07\u0e41\u0e15\u0e48\u0e25\u0e30\u0e04\u0e23\u0e31\u0e49\u0e07\u0e17\u0e35\u0e48 Loop \u0e40\u0e23\u0e32\u0e08\u0e30 Loop \u0e15\u0e31\u0e49\u0e07\u0e41\u0e15\u0e48\u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23\u0e41\u0e23\u0e01\u0e08\u0e19\u0e08\u0e1a\u0e02\u0e2d\u0e07 String \u0e17\u0e35\u0e48\u0e2a\u0e2d\u0e07 \u0e41\u0e25\u0e49\u0e27\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e40\u0e08\u0e2d\u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23\u0e0b\u0e49\u0e33 \u0e40\u0e23\u0e32\u0e01\u0e49\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e04\u0e33\u0e15\u0e2d\u0e1a\u0e44\u0e1b 1 \u0e41\u0e25\u0e49\u0e27\u0e2d\u0e2d\u0e01\u0e08\u0e32\u0e01 Loop \u0e44\u0e14\u0e49\u0e40\u0e25\u0e22</p>"},{"location":"problems/posn1_67_bkk_p2/#2-arrays","title":"\u0e27\u0e34\u0e18\u0e35\u0e17\u0e33\u0e17\u0e35\u0e48 2 (Arrays)","text":"<p>\u0e23\u0e31\u0e1a Input \u0e21\u0e32\u0e40\u0e1b\u0e47\u0e19 String \u0e41\u0e25\u0e49\u0e27\u0e40\u0e23\u0e32\u0e01\u0e47\u0e41\u0e04\u0e48 Loop \u0e15\u0e32\u0e21\u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23\u0e41\u0e15\u0e48\u0e25\u0e30\u0e15\u0e31\u0e27 \u0e41\u0e25\u0e30\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e1e\u0e1a\u0e41\u0e15\u0e48\u0e25\u0e30\u0e15\u0e31\u0e27 \u0e01\u0e47\u0e19\u0e31\u0e1a\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e25\u0e07\u0e43\u0e19 Array \u0e17\u0e35\u0e48\u0e08\u0e30\u0e40\u0e01\u0e47\u0e1a\u0e40\u0e1b\u0e47\u0e19\u0e15\u0e31\u0e27\u0e40\u0e25\u0e02 \u0e27\u0e48\u0e32\u0e1e\u0e1a\u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23\u0e17\u0e35\u0e48 \\(i\\) \u0e21\u0e32\u0e41\u0e25\u0e49\u0e27\u0e01\u0e35\u0e48\u0e15\u0e31\u0e27 \u0e0b\u0e36\u0e48\u0e07\u0e40\u0e23\u0e32\u0e08\u0e30\u0e21\u0e35\u0e2d\u0e22\u0e39\u0e48 2 Array (\u0e15\u0e31\u0e49\u0e07\u0e0a\u0e37\u0e48\u0e2d\u0e27\u0e48\u0e32 \\(aa\\) \u0e41\u0e25\u0e30 \\(bb\\)) \u0e41\u0e25\u0e49\u0e27\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e40\u0e23\u0e32 Loop \u0e15\u0e32\u0e21\u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23 \u0e40\u0e23\u0e32\u0e08\u0e30\u0e40\u0e02\u0e35\u0e22\u0e19\u0e27\u0e48\u0e32 \\(aa[a[i]]\\)++; (\u0e40\u0e2b\u0e15\u0e38\u0e1c\u0e25\u0e17\u0e35\u0e48\u0e40\u0e23\u0e32\u0e17\u0e33\u0e41\u0e1a\u0e1a\u0e19\u0e35\u0e49\u0e44\u0e14\u0e49 \u0e40\u0e1b\u0e47\u0e19\u0e40\u0e1e\u0e23\u0e32\u0e30\u0e27\u0e48\u0e32 \u0e43\u0e19\u0e20\u0e32\u0e29\u0e32 C \u0e08\u0e30 convert \u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23 \u0e43\u0e2b\u0e49\u0e40\u0e1b\u0e47\u0e19\u0e04\u0e48\u0e32 ASCII VALUE \u0e02\u0e2d\u0e07\u0e21\u0e31\u0e19\u0e43\u0e2b\u0e49\u0e40\u0e25\u0e22)</p>"},{"location":"problems/posn1_67_bkk_p2/#code-2","title":"Code (\u0e27\u0e34\u0e18\u0e35\u0e17\u0e33\u0e17\u0e35\u0e48 2)","text":"repeating_string.c<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nint main(){\n    char a[25], b[25];\n    scanf(\"%s %s\", a, b);\n    int n = strlen(a), m = strlen(b);\n    int aa[200] = {0};\n    for (int i = 0; i &lt; n; i++) {\n        aa[a[i]]++;\n    }\n    int bb[200] = {0};\n    for (int i = 0; i &lt; m; i++) {\n        if (aa[b[i]] &gt; 0 &amp;&amp; bb[b[i]] == 0) {\n            printf(\"%c \", b[i]);\n            bb[b[i]]++;\n        }\n    }\n}\n</code></pre> <p>\u0e2b\u0e32\u0e01\u0e21\u0e35\u0e02\u0e49\u0e2d\u0e2a\u0e07\u0e2a\u0e31\u0e22 comment \u0e44\u0e27\u0e49\u0e43\u0e15\u0e49 post \u0e44\u0e14\u0e49\u0e40\u0e25\u0e22\u0e19\u0e30\u0e04\u0e23\u0e31\u0e1a \ud83d\ude47\u200d\u2642\ufe0f\ud83d\ude47\u200d\u2642\ufe0f  </p>"},{"location":"problems/posn1_67_bkk_p3/","title":"\u0e02\u0e49\u0e2d\u0e2a\u0e2d\u0e1a\u0e17\u0e49\u0e32\u0e22\u0e04\u0e48\u0e32\u0e22 1 \u0e28\u0e39\u0e19\u0e22\u0e4c \u0e2a\u0e2d\u0e27\u0e19.\u0e01\u0e23\u0e38\u0e07\u0e40\u0e17\u0e1e\u0e21\u0e2b\u0e32\u0e19\u0e04\u0e23 \u0e1b\u0e35 2567 \u0e02\u0e49\u0e2d\u0e17\u0e35\u0e48 3","text":""},{"location":"problems/posn1_67_bkk_p3/#problem","title":"Problem","text":""},{"location":"problems/posn1_67_bkk_p3/#_1","title":"\u0e2a\u0e23\u0e38\u0e1b\u0e42\u0e08\u0e17\u0e22\u0e4c","text":"<p>\u0e40\u0e23\u0e32\u0e15\u0e49\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e2b\u0e32\u0e04\u0e27\u0e32\u0e21\u0e2a\u0e39\u0e07\u0e02\u0e2d\u0e07\u0e08\u0e23\u0e27\u0e14 \u0e13 \u0e40\u0e27\u0e25\u0e32\u0e17\u0e35\u0e48 \\(t\\) \u0e02\u0e2d\u0e07\u0e08\u0e23\u0e27\u0e14\u0e17\u0e35\u0e48\u0e16\u0e39\u0e01\u0e2a\u0e48\u0e07\u0e44\u0e1b\u0e1a\u0e34\u0e19\u0e19\u0e2d\u0e01\u0e42\u0e25\u0e01 \u0e40\u0e21\u0e37\u0e48\u0e2d\u0e40\u0e23\u0e32\u0e23\u0e39\u0e49\u0e04\u0e27\u0e32\u0e21\u0e2a\u0e39\u0e07\u0e02\u0e2d\u0e07\u0e08\u0e23\u0e27\u0e14 \u0e13 \u0e40\u0e27\u0e25\u0e32\u0e17\u0e35\u0e48 \\(0-5\\)</p>"},{"location":"problems/posn1_67_bkk_p3/#_2","title":"\u0e2a\u0e34\u0e48\u0e07\u0e17\u0e35\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e17\u0e33","text":"<p>\u0e40\u0e02\u0e35\u0e22\u0e19\u0e42\u0e04\u0e49\u0e14\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e2b\u0e32\u0e04\u0e27\u0e32\u0e21\u0e40\u0e23\u0e47\u0e27\u0e02\u0e2d\u0e07\u0e08\u0e23\u0e27\u0e14 \u0e13 \u0e40\u0e27\u0e25\u0e32\u0e17\u0e35\u0e48 \\(t\\)</p> <p>\u0e15\u0e32\u0e23\u0e32\u0e07\u0e04\u0e27\u0e32\u0e21\u0e2a\u0e39\u0e07\u0e02\u0e2d\u0e07\u0e08\u0e23\u0e27\u0e14\u0e17\u0e35\u0e48\u0e42\u0e08\u0e17\u0e22\u0e4c\u0e01\u0e33\u0e2b\u0e19\u0e14\u0e43\u0e2b\u0e49</p> \u0e40\u0e27\u0e25\u0e32 (\u0e27\u0e34\u0e19\u0e32\u0e17\u0e35) \u0e04\u0e27\u0e32\u0e21\u0e2a\u0e39\u0e07 (\u0e40\u0e21\u0e15\u0e23) 0 0 1 4 2 14 3 30 4 52 5 80 <p>Prerequisites</p> <ul> <li>Math</li> </ul>"},{"location":"problems/posn1_67_bkk_p3/#solution","title":"Solution","text":""},{"location":"problems/posn1_67_bkk_p3/#_3","title":"\u0e27\u0e34\u0e18\u0e35\u0e17\u0e33","text":"<p>\u0e08\u0e32\u0e01\u0e04\u0e13\u0e34\u0e15\u0e28\u0e32\u0e2a\u0e15\u0e23\u0e4c \u0e08\u0e30\u0e40\u0e2b\u0e47\u0e19\u0e44\u0e14\u0e49\u0e27\u0e48\u0e32 \u0e2a\u0e21\u0e01\u0e32\u0e23\u0e04\u0e33\u0e19\u0e27\u0e13\u0e04\u0e27\u0e32\u0e21\u0e2a\u0e39\u0e07 \u0e13 \\(t\\) \u0e43\u0e14\u0e46 \u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19: \\(t(3t+1)\\)</p>"},{"location":"problems/posn1_67_bkk_p3/#code","title":"Code","text":"astronaut.c<pre><code>#include &lt;stdio.h&gt;\n\nint main(){\n    int t; \n    scanf(\"%d\", &amp;t);\n    printf(\"%d\", t * (3 * t + 1));\n}\n</code></pre> <p>\u0e2b\u0e32\u0e01\u0e21\u0e35\u0e02\u0e49\u0e2d\u0e2a\u0e07\u0e2a\u0e31\u0e22 comment \u0e44\u0e27\u0e49\u0e43\u0e15\u0e49 post \u0e44\u0e14\u0e49\u0e40\u0e25\u0e22\u0e19\u0e30\u0e04\u0e23\u0e31\u0e1a \ud83d\ude47\u200d\u2642\ufe0f\ud83d\ude47\u200d\u2642\ufe0f  </p>"},{"location":"problems/posn1_67_bkk_p4/","title":"\u0e02\u0e49\u0e2d\u0e2a\u0e2d\u0e1a\u0e17\u0e49\u0e32\u0e22\u0e04\u0e48\u0e32\u0e22 1 \u0e28\u0e39\u0e19\u0e22\u0e4c \u0e2a\u0e2d\u0e27\u0e19.\u0e01\u0e23\u0e38\u0e07\u0e40\u0e17\u0e1e\u0e21\u0e2b\u0e32\u0e19\u0e04\u0e23 \u0e1b\u0e35 2567 \u0e02\u0e49\u0e2d\u0e17\u0e35\u0e48 4","text":""},{"location":"problems/posn1_67_bkk_p4/#problem","title":"Problem","text":""},{"location":"problems/posn1_67_bkk_p4/#_1","title":"\u0e2a\u0e23\u0e38\u0e1b\u0e42\u0e08\u0e17\u0e22\u0e4c","text":"<p>\u0e23\u0e31\u0e1a\u0e04\u0e48\u0e32\u0e27\u0e31\u0e19\u0e02\u0e2d\u0e07\u0e27\u0e31\u0e19\u0e2a\u0e34\u0e49\u0e19\u0e1b\u0e35 \u0e41\u0e25\u0e49\u0e27\u0e41\u0e2a\u0e14\u0e07\u0e1c\u0e25\u0e2d\u0e2d\u0e01\u0e21\u0e32\u0e40\u0e1b\u0e47\u0e19\u0e27\u0e31\u0e19\u0e41\u0e21\u0e48\u0e40\u0e40\u0e2b\u0e48\u0e07\u0e0a\u0e32\u0e15\u0e34\u0e43\u0e19\u0e1b\u0e35\u0e40\u0e14\u0e35\u0e22\u0e27\u0e01\u0e31\u0e19 (1 \u0e04\u0e37\u0e2d\u0e27\u0e31\u0e19\u0e2d\u0e32\u0e17\u0e34\u0e15\u0e22\u0e4c \u0e44\u0e25\u0e48\u0e44\u0e1b\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e22\u0e46\u0e08\u0e19\u0e16\u0e36\u0e07 7 \u0e04\u0e37\u0e2d\u0e27\u0e31\u0e19\u0e40\u0e2a\u0e32\u0e23\u0e4c)</p>"},{"location":"problems/posn1_67_bkk_p4/#_2","title":"\u0e2a\u0e34\u0e48\u0e07\u0e17\u0e35\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e17\u0e33","text":"<p>\u0e40\u0e02\u0e35\u0e22\u0e19\u0e42\u0e04\u0e49\u0e14\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e2b\u0e32\u0e27\u0e31\u0e19\u0e41\u0e21\u0e48\u0e41\u0e2b\u0e48\u0e07\u0e0a\u0e32\u0e15\u0e34\u0e43\u0e19\u0e1b\u0e35\u0e19\u0e31\u0e49\u0e19</p> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07</p> Input Output 3 2 <p>Prerequisites</p> <ul> <li>If-Else Conditions</li> </ul>"},{"location":"problems/posn1_67_bkk_p4/#solution","title":"Solution","text":""},{"location":"problems/posn1_67_bkk_p4/#_3","title":"\u0e27\u0e34\u0e18\u0e35\u0e17\u0e33","text":"<p>\u0e2b\u0e32\u0e01\u0e25\u0e2d\u0e07\u0e44\u0e25\u0e48\u0e19\u0e31\u0e1a\u0e08\u0e33\u0e19\u0e27\u0e19\u0e27\u0e31\u0e19 \u0e08\u0e30\u0e44\u0e14\u0e49\u0e27\u0e48\u0e32 \u0e15\u0e31\u0e49\u0e07\u0e41\u0e15\u0e48\u0e27\u0e31\u0e19\u0e41\u0e21\u0e48 \u0e16\u0e36\u0e07\u0e27\u0e31\u0e19\u0e2a\u0e34\u0e49\u0e19\u0e1b\u0e35 \u0e08\u0e30\u0e21\u0e35\u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14 141 \u0e27\u0e31\u0e19 \u0e19\u0e31\u0e48\u0e19\u0e04\u0e37\u0e2d \u0e2b\u0e32\u0e01\u0e40\u0e23\u0e32\u0e25\u0e1a 141 \u0e2d\u0e2d\u0e01\u0e08\u0e32\u0e01\u0e27\u0e31\u0e19\u0e17\u0e35\u0e48\u0e40\u0e23\u0e32\u0e44\u0e14\u0e49\u0e23\u0e31\u0e1a\u0e21\u0e32 \u0e41\u0e25\u0e49\u0e27\u0e2b\u0e32\u0e40\u0e28\u0e29\u0e17\u0e35\u0e48\u0e40\u0e2b\u0e25\u0e37\u0e2d\u0e08\u0e32\u0e01\u0e01\u0e32\u0e23\u0e2b\u0e32\u0e23\u0e14\u0e49\u0e27\u0e22 7 \u0e40\u0e23\u0e32\u0e08\u0e30\u0e44\u0e14\u0e49\u0e40\u0e1b\u0e47\u0e19\u0e27\u0e31\u0e19\u0e43\u0e19\u0e2a\u0e31\u0e1b\u0e14\u0e32\u0e2b\u0e4c\u0e02\u0e2d\u0e07\u0e27\u0e31\u0e19\u0e19\u0e31\u0e49\u0e19</p> <p>\u0e0b\u0e36\u0e48\u0e07\u0e2a\u0e31\u0e07\u0e40\u0e01\u0e15\u0e27\u0e48\u0e32 141 \u0e08\u0e30\u0e2a\u0e21\u0e20\u0e32\u0e04\u0e01\u0e31\u0e1a 1 \u0e20\u0e32\u0e22\u0e43\u0e15\u0e49\u0e21\u0e2d\u0e14\u0e38\u0e42\u0e25 7 (\u0e08\u0e33\u0e19\u0e27\u0e19\u0e27\u0e31\u0e19\u0e43\u0e19\u0e2a\u0e31\u0e1b\u0e14\u0e32\u0e2b\u0e4c) </p> <p>\u0e14\u0e31\u0e07\u0e19\u0e31\u0e49\u0e19 \u0e08\u0e32\u0e01 Observation \u0e41\u0e25\u0e30\u0e01\u0e32\u0e23\u0e04\u0e33\u0e19\u0e27\u0e13\u0e15\u0e48\u0e32\u0e07\u0e46 \u0e40\u0e23\u0e32\u0e08\u0e30\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16 -1 \u0e04\u0e48\u0e32\u0e19\u0e31\u0e49\u0e19 \u0e41\u0e25\u0e49\u0e27\u0e15\u0e2d\u0e1a\u0e44\u0e14\u0e49\u0e40\u0e25\u0e22 \u0e41\u0e15\u0e48\u0e41\u0e04\u0e48\u0e40\u0e02\u0e35\u0e22\u0e19 <code>if-else</code> \u0e14\u0e31\u0e01\u0e40\u0e2d\u0e32\u0e44\u0e27\u0e49 \u0e01\u0e23\u0e13\u0e35\u0e17\u0e35\u0e48\u0e04\u0e48\u0e32\u0e17\u0e35\u0e48\u0e40\u0e23\u0e32\u0e23\u0e31\u0e1a\u0e21\u0e32\u0e40\u0e17\u0e48\u0e32\u0e01\u0e31\u0e1a 1 \u0e40\u0e21\u0e37\u0e48\u0e2d -1 \u0e08\u0e30\u0e40\u0e2b\u0e25\u0e37\u0e2d 0 \u0e40\u0e23\u0e32\u0e01\u0e47\u0e41\u0e04\u0e48\u0e1e\u0e34\u0e21\u0e1e\u0e4c\u0e15\u0e2d\u0e1a\u0e44\u0e1b\u0e40\u0e1b\u0e47\u0e19 7 \u0e19\u0e31\u0e48\u0e19\u0e40\u0e2d\u0e07\u0e04\u0e23\u0e31\u0e1a</p>"},{"location":"problems/posn1_67_bkk_p4/#code","title":"Code","text":"miss_mom.c<pre><code>#include &lt;stdio.h&gt;\n\nint main(){\n    int n;\n    scanf(\"%d\", &amp;n);\n    if (n == 1) printf(\"7\");\n    else printf(\"%d\", n - 1);\n}\n</code></pre> <p>\u0e2b\u0e32\u0e01\u0e21\u0e35\u0e02\u0e49\u0e2d\u0e2a\u0e07\u0e2a\u0e31\u0e22 comment \u0e44\u0e27\u0e49\u0e43\u0e15\u0e49 post \u0e44\u0e14\u0e49\u0e40\u0e25\u0e22\u0e19\u0e30\u0e04\u0e23\u0e31\u0e1a \ud83d\ude47\u200d\u2642\ufe0f\ud83d\ude47\u200d\u2642\ufe0f  </p>"},{"location":"problems/posn1_67_bkk_p5/","title":"\u0e02\u0e49\u0e2d\u0e2a\u0e2d\u0e1a\u0e17\u0e49\u0e32\u0e22\u0e04\u0e48\u0e32\u0e22 1 \u0e28\u0e39\u0e19\u0e22\u0e4c \u0e2a\u0e2d\u0e27\u0e19.\u0e01\u0e23\u0e38\u0e07\u0e40\u0e17\u0e1e\u0e21\u0e2b\u0e32\u0e19\u0e04\u0e23 \u0e1b\u0e35 2567 \u0e02\u0e49\u0e2d\u0e17\u0e35\u0e48 5","text":""},{"location":"problems/posn1_67_bkk_p5/#problem-credit-card","title":"Problem: Credit Card","text":""},{"location":"problems/posn1_67_bkk_p5/#_1","title":"\u0e2a\u0e23\u0e38\u0e1b\u0e42\u0e08\u0e17\u0e22\u0e4c","text":"<p>\u0e40\u0e23\u0e32\u0e21\u0e35\u0e40\u0e25\u0e02\u0e1a\u0e31\u0e15\u0e23\u0e40\u0e04\u0e23\u0e14\u0e34\u0e15 16 \u0e2b\u0e25\u0e31\u0e01 \u0e42\u0e14\u0e22\u0e40\u0e23\u0e32\u0e15\u0e49\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e15\u0e23\u0e27\u0e08\u0e2a\u0e2d\u0e1a\u0e40\u0e25\u0e02\u0e1a\u0e31\u0e15\u0e23\u0e40\u0e04\u0e23\u0e14\u0e34\u0e15\u0e27\u0e48\u0e32 \u0e16\u0e39\u0e01\u0e15\u0e49\u0e2d\u0e07\u0e2b\u0e23\u0e37\u0e2d\u0e44\u0e21\u0e48 </p> <p>\u0e42\u0e14\u0e22\u0e21\u0e35\u0e02\u0e31\u0e49\u0e19\u0e15\u0e2d\u0e19\u0e14\u0e31\u0e07\u0e19\u0e35\u0e49: \u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07: 5490123456789128</p> <ol> <li>\u0e19\u0e33\u0e40\u0e25\u0e02\u0e2b\u0e25\u0e31\u0e01\u0e2a\u0e38\u0e14\u0e17\u0e49\u0e32\u0e22\u0e2d\u0e2d\u0e01 (549012345678912)</li> <li>reverse \u0e15\u0e31\u0e27\u0e40\u0e25\u0e02 \u0e41\u0e25\u0e49\u0e27 \u0e04\u0e39\u0e13 2 \u0e01\u0e31\u0e1a\u0e15\u0e31\u0e27\u0e40\u0e25\u0e02\u0e43\u0e19\u0e2b\u0e25\u0e31\u0e01\u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19\u0e04\u0e35\u0e48     (2 1 9 8 7 6 5 4 3 2 1 0 9 4 5 -&gt; 4 1 18 8 14 6 10 4 6 2 2 0 18 4 10)</li> <li>\u0e41\u0e1a\u0e48\u0e07\u0e40\u0e25\u0e02\u0e2a\u0e2d\u0e07\u0e2b\u0e25\u0e31\u0e01\u0e43\u0e14\u0e46 \u0e43\u0e2b\u0e49\u0e40\u0e1b\u0e47\u0e19\u0e2b\u0e25\u0e31\u0e01\u0e40\u0e14\u0e35\u0e22\u0e27 2 \u0e15\u0e31\u0e27 \u0e40\u0e0a\u0e48\u0e19 18 -&gt; 1, 8     (4 1 18 8 14 6 10 4 6 2 2 0 18 4 10 -&gt; 4 1 1 8 8 1 4 6 1 0 4 6 2 2 0 1 8 4 1 0)</li> <li>\u0e2b\u0e32\u0e1c\u0e25\u0e23\u0e27\u0e21\u0e40\u0e25\u0e02\u0e17\u0e38\u0e01\u0e15\u0e31\u0e27     (4 + 1 + 1 + 8 + 8 + 1 + 4 + 6 + 1 + 0 + 4 + 6 + 2 + 2 + 0 + 1 + 8 + 4 + 1 + 0 = 62)</li> <li>\u0e16\u0e49\u0e32\u0e40\u0e25\u0e02\u0e2b\u0e25\u0e31\u0e01\u0e2a\u0e38\u0e14\u0e17\u0e49\u0e32\u0e22\u0e02\u0e2d\u0e07\u0e1a\u0e31\u0e15\u0e23\u0e40\u0e04\u0e23\u0e14\u0e34\u0e15\u0e04\u0e37\u0e2d (10 - (\u0e1c\u0e25\u0e23\u0e27\u0e21 mod 10)) mod 10 \u0e41\u0e25\u0e49\u0e27 \u0e1a\u0e31\u0e15\u0e23\u0e40\u0e04\u0e23\u0e14\u0e34\u0e15\u0e43\u0e1a\u0e19\u0e35\u0e49 \u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19\u0e1a\u0e31\u0e15\u0e23\u0e40\u0e04\u0e23\u0e14\u0e34\u0e15\u0e17\u0e35\u0e48\u0e16\u0e39\u0e01\u0e15\u0e49\u0e2d\u0e07     ((10 - (62 mod 10)) mod 10 = 8 \u0e0b\u0e36\u0e48\u0e07\u0e15\u0e23\u0e07\u0e01\u0e31\u0e1a\u0e2b\u0e25\u0e31\u0e01\u0e2a\u0e38\u0e14\u0e17\u0e49\u0e32\u0e22\u0e02\u0e2d\u0e07 5490123456789128)</li> </ol>"},{"location":"problems/posn1_67_bkk_p5/#_2","title":"\u0e2a\u0e34\u0e48\u0e07\u0e17\u0e35\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e17\u0e33","text":"<p>\u0e40\u0e02\u0e35\u0e22\u0e19\u0e42\u0e04\u0e49\u0e14\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e15\u0e23\u0e27\u0e08\u0e2a\u0e2d\u0e1a\u0e27\u0e48\u0e32 \u0e40\u0e25\u0e02\u0e1a\u0e31\u0e15\u0e23\u0e40\u0e04\u0e23\u0e14\u0e34\u0e15\u0e17\u0e35\u0e48\u0e01\u0e33\u0e2b\u0e19\u0e14\u0e43\u0e2b\u0e49 \u0e40\u0e1b\u0e47\u0e19\u0e1a\u0e31\u0e15\u0e23\u0e40\u0e04\u0e23\u0e14\u0e34\u0e15\u0e08\u0e23\u0e34\u0e07\u0e2b\u0e23\u0e37\u0e2d\u0e44\u0e21\u0e48</p> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07</p> Input Output 5490123456789128 yes 5647373649364392 no <p>Prerequisites</p> <ul> <li>Array</li> <li>If-Else</li> </ul>"},{"location":"problems/posn1_67_bkk_p5/#solution","title":"Solution","text":""},{"location":"problems/posn1_67_bkk_p5/#_3","title":"\u0e27\u0e34\u0e18\u0e35\u0e17\u0e33","text":"<p>\u0e23\u0e31\u0e1a Input \u0e21\u0e32\u0e40\u0e1b\u0e47\u0e19 String \u0e41\u0e25\u0e49\u0e27\u0e41\u0e1b\u0e25\u0e07\u0e40\u0e1b\u0e47\u0e19 Array \u0e42\u0e14\u0e22\u0e41\u0e15\u0e48\u0e25\u0e30\u0e0a\u0e48\u0e2d\u0e07\u0e08\u0e30\u0e40\u0e01\u0e47\u0e1a\u0e41\u0e15\u0e48\u0e25\u0e30\u0e2b\u0e25\u0e31\u0e01 \u0e41\u0e25\u0e49\u0e27\u0e01\u0e47\u0e17\u0e33\u0e15\u0e32\u0e21\u0e02\u0e31\u0e31\u0e49\u0e19\u0e15\u0e2d\u0e19\u0e17\u0e35\u0e48\u0e42\u0e08\u0e17\u0e22\u0e4c\u0e01\u0e33\u0e2b\u0e19\u0e14\u0e43\u0e2b\u0e49\u0e42\u0e14\u0e22\u0e15\u0e23\u0e07\u0e40\u0e25\u0e22</p> <p>\u0e40\u0e23\u0e35\u0e22\u0e07\u0e25\u0e33\u0e14\u0e31\u0e1a\u0e41\u0e15\u0e48\u0e25\u0e30\u0e02\u0e31\u0e49\u0e19\u0e15\u0e2d\u0e19:</p> <ol> <li>\u0e41\u0e1b\u0e25\u0e07 Input \u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19 String \u0e40\u0e1b\u0e47\u0e19 Array</li> <li>\u0e44\u0e21\u0e48\u0e08\u0e33\u0e40\u0e1b\u0e47\u0e19\u0e15\u0e49\u0e2d\u0e07\u0e01\u0e25\u0e31\u0e1a\u0e2b\u0e25\u0e31\u0e07\u0e40\u0e25\u0e02\u0e1a\u0e31\u0e15\u0e23\u0e40\u0e04\u0e23\u0e14\u0e34\u0e15 \u0e42\u0e14\u0e22\u0e40\u0e23\u0e32\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e04\u0e39\u0e13 2 \u0e43\u0e19\u0e2b\u0e25\u0e31\u0e01\u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19\u0e04\u0e39\u0e48\u0e41\u0e17\u0e19\u0e01\u0e32\u0e23\u0e04\u0e39\u0e13\u0e43\u0e19\u0e2b\u0e25\u0e31\u0e01\u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19\u0e04\u0e35\u0e48\u0e44\u0e14\u0e49</li> <li>\u0e41\u0e25\u0e30 4. \u0e2b\u0e32\u0e1c\u0e25\u0e23\u0e27\u0e21\u0e02\u0e2d\u0e07\u0e40\u0e25\u0e02\u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14 \u0e42\u0e14\u0e22\u0e2b\u0e32\u0e01\u0e21\u0e35\u0e0a\u0e48\u0e2d\u0e07\u0e43\u0e14\u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19\u0e40\u0e25\u0e02 2 \u0e2b\u0e25\u0e31\u0e01 \u0e40\u0e23\u0e32\u0e01\u0e47\u0e41\u0e04\u0e48\u0e04\u0e34\u0e14\u0e41\u0e22\u0e01\u0e2b\u0e25\u0e31\u0e01 \u0e0b\u0e36\u0e48\u0e07\u0e2b\u0e25\u0e31\u0e01\u0e41\u0e23\u0e01\u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19 1 \u0e41\u0e19\u0e48\u0e46 \u0e41\u0e25\u0e30\u0e43\u0e19\u0e01\u0e32\u0e23\u0e2b\u0e32\u0e2b\u0e25\u0e31\u0e01\u0e2b\u0e19\u0e48\u0e27\u0e22 \u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e2b\u0e32\u0e44\u0e14\u0e49\u0e42\u0e14\u0e22\u0e01\u0e32\u0e23\u0e19\u0e33 \u0e15\u0e31\u0e27\u0e40\u0e25\u0e02\u0e19\u0e31\u0e49\u0e19 mod 10 \u0e44\u0e14\u0e49 \u0e19\u0e31\u0e48\u0e19\u0e04\u0e37\u0e2d \u0e2b\u0e32\u0e01\u0e40\u0e08\u0e2d\u0e40\u0e25\u0e02 2 \u0e2b\u0e25\u0e31\u0e01 \u0e04\u0e48\u0e32\u0e17\u0e35\u0e48\u0e08\u0e30\u0e15\u0e49\u0e2d\u0e07\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e04\u0e37\u0e2d 1 + (num mod 10)</li> <li>\u0e15\u0e23\u0e27\u0e08\u0e2a\u0e2d\u0e1a\u0e15\u0e32\u0e21\u0e40\u0e07\u0e37\u0e48\u0e2d\u0e19\u0e44\u0e02\u0e02\u0e2d\u0e07\u0e42\u0e08\u0e17\u0e22\u0e4c\u0e27\u0e48\u0e32 (10 - (\u0e1c\u0e25\u0e23\u0e27\u0e21 mod 10)) mod 10 \u0e21\u0e35\u0e04\u0e48\u0e32\u0e40\u0e17\u0e48\u0e32\u0e01\u0e31\u0e1a\u0e2b\u0e25\u0e31\u0e01\u0e2a\u0e38\u0e14\u0e17\u0e49\u0e32\u0e22\u0e2b\u0e23\u0e37\u0e2d\u0e44\u0e21\u0e48 \u0e41\u0e25\u0e49\u0e27\u0e01\u0e47\u0e1e\u0e34\u0e21\u0e1e\u0e4c\u0e2d\u0e2d\u0e01\u0e21\u0e32\u0e40\u0e1b\u0e47\u0e19 \"yes\" \u0e2b\u0e23\u0e37\u0e2d \"no\" \u0e15\u0e32\u0e21\u0e17\u0e35\u0e48\u0e40\u0e0a\u0e47\u0e01\u0e44\u0e14\u0e49</li> </ol>"},{"location":"problems/posn1_67_bkk_p5/#code","title":"Code","text":"credit_card.c<pre><code>#include &lt;stdio.h&gt;\n\nint main(){\n    char str[16];\n    scanf(\"%s\", str);\n    int a[16];\n    for (int i = 0; i &lt; 16; i++) {\n        a[i] = str[i] - '0';\n    }\n    int sum = 0;\n    for (int i = 0; i &lt; 15; i++) {\n        if (i % 2 == 0) a[i] *= 2;\n        if (a[i] &gt; 9) sum += a[i] % 10 + 1;\n        else sum += a[i];\n    }\n    if ((10 - (sum % 10)) % 10 == a[15]) {\n        printf(\"yes\");\n    }\n    else {\n        printf(\"no\");\n    }\n}\n</code></pre> <p>\u0e2b\u0e32\u0e01\u0e21\u0e35\u0e02\u0e49\u0e2d\u0e2a\u0e07\u0e2a\u0e31\u0e22 comment \u0e44\u0e27\u0e49\u0e43\u0e15\u0e49 post \u0e44\u0e14\u0e49\u0e40\u0e25\u0e22\u0e19\u0e30\u0e04\u0e23\u0e31\u0e1a \ud83d\ude47\u200d\u2642\ufe0f\ud83d\ude47\u200d\u2642\ufe0f  </p>"},{"location":"problems/toi20_bit_string/","title":"Bitmask DP &amp; toi20_bit_string","text":""},{"location":"problems/toi20_bit_string/#problem","title":"Problem","text":""},{"location":"problems/toi20_bit_string/#_1","title":"\u0e2a\u0e23\u0e38\u0e1b\u0e42\u0e08\u0e17\u0e22\u0e4c","text":"<p>\u0e40\u0e23\u0e32\u0e21\u0e35 Binary String (\u0e2a\u0e15\u0e23\u0e34\u0e07\u0e17\u0e35\u0e48\u0e1b\u0e23\u0e30\u0e01\u0e2d\u0e1a\u0e14\u0e49\u0e27\u0e22 '1' \u0e41\u0e25\u0e30 '0' \u0e40\u0e17\u0e48\u0e32\u0e19\u0e31\u0e49\u0e19) \u0e04\u0e27\u0e32\u0e21\u0e22\u0e32\u0e27 \\(N\\) \u0e0b\u0e36\u0e48\u0e07\u0e2b\u0e32\u0e01\u0e40\u0e23\u0e32\u0e1e\u0e34\u0e08\u0e32\u0e23\u0e13\u0e32 String \u0e04\u0e27\u0e32\u0e21\u0e22\u0e32\u0e27 \\(N\\) \u0e17\u0e38\u0e01\u0e23\u0e39\u0e1b\u0e41\u0e1a\u0e1a \u0e08\u0e30\u0e1e\u0e1a\u0e27\u0e48\u0e32\u0e21\u0e35 \\(2^N\\) \u0e23\u0e39\u0e1b\u0e41\u0e1a\u0e1a \u0e42\u0e14\u0e22\u0e41\u0e15\u0e48\u0e25\u0e30\u0e23\u0e39\u0e1b\u0e41\u0e1a\u0e1a \u0e08\u0e30\u0e21\u0e35\u0e04\u0e48\u0e32\u0e19\u0e49\u0e33\u0e2b\u0e19\u0e31\u0e01 \\(C_i\\)</p> <p>\u0e01\u0e32\u0e23\u0e25\u0e14\u0e17\u0e2d\u0e19\u0e04\u0e38\u0e13\u0e20\u0e32\u0e1e \u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19\u0e01\u0e32\u0e23\u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19 '1' \u0e40\u0e1b\u0e47\u0e19 '0' \u0e0b\u0e36\u0e48\u0e07\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e17\u0e33\u0e44\u0e14\u0e49 2 \u0e27\u0e34\u0e18\u0e35 1. \u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19 '1' \u0e40\u0e1b\u0e47\u0e19 '0' 2.  \u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19 '11' (\u0e2d\u0e31\u0e01\u0e02\u0e23\u0e30 '1' \u0e2a\u0e2d\u0e07\u0e15\u0e31\u0e27\u0e15\u0e34\u0e14\u0e01\u0e31\u0e19) \u0e40\u0e1b\u0e47\u0e19 '00' (\u0e2d\u0e31\u0e01\u0e02\u0e23\u0e30 '0' \u0e2a\u0e2d\u0e07\u0e15\u0e31\u0e27\u0e15\u0e34\u0e14\u0e01\u0e31\u0e19)</p> <p>\u0e42\u0e14\u0e22\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e44\u0e14\u0e49 Binary String \u0e43\u0e2b\u0e21\u0e48\u0e17\u0e35\u0e48\u0e40\u0e01\u0e34\u0e14\u0e08\u0e32\u0e01\u0e01\u0e32\u0e23\u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19 '1' \u0e40\u0e1b\u0e47\u0e19 '0' \u0e40\u0e23\u0e32\u0e08\u0e30\u0e1a\u0e27\u0e01\u0e04\u0e48\u0e32\u0e19\u0e49\u0e33\u0e2b\u0e19\u0e31\u0e01\u0e02\u0e2d\u0e07 Binary String \u0e43\u0e19\u0e02\u0e13\u0e30\u0e19\u0e31\u0e49\u0e19 \u0e44\u0e1b\u0e01\u0e31\u0e1a \"\u0e04\u0e48\u0e32\u0e25\u0e14\u0e17\u0e2d\u0e19\u0e04\u0e38\u0e13\u0e20\u0e32\u0e1e\"  \u0e41\u0e25\u0e49\u0e27 Operation \u0e19\u0e35\u0e49 \u0e08\u0e30\u0e08\u0e1a\u0e25\u0e07\u0e40\u0e21\u0e37\u0e48\u0e2d String \u0e01\u0e25\u0e32\u0e22\u0e40\u0e1b\u0e47\u0e19 \"00000........0\" \u0e0b\u0e36\u0e48\u0e07\u0e40\u0e23\u0e32\u0e08\u0e30\u0e15\u0e49\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e43\u0e2b\u0e49 \u0e04\u0e48\u0e32\u0e25\u0e14\u0e17\u0e2d\u0e19\u0e04\u0e38\u0e13\u0e20\u0e32\u0e1e \u0e04\u0e48\u0e32\u0e21\u0e32\u0e01\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14</p>"},{"location":"problems/toi20_bit_string/#_2","title":"\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e01\u0e32\u0e23\u0e25\u0e14\u0e17\u0e2d\u0e19\u0e04\u0e38\u0e13\u0e20\u0e32\u0e1e","text":"<p>\\(N = 3\\) \\(001 = 9\\) \\(000 = 0\\) \\(100 = 9\\) \\(010 = 1\\) \\(101 = 1\\) \\(110 = 2\\) \\(111 = 3\\) \\(011 = 1\\)</p> <p>Binary String \u0e17\u0e35\u0e48\u0e01\u0e33\u0e2b\u0e19\u0e14\u0e43\u0e2b\u0e49: \\(111\\)</p> <p>\u0e02\u0e31\u0e49\u0e19\u0e15\u0e2d\u0e19: \u0e04\u0e48\u0e32\u0e25\u0e14\u0e17\u0e2d\u0e19\u0e04\u0e38\u0e13\u0e20\u0e32\u0e1e \u0e40\u0e23\u0e34\u0e48\u0e21\u0e15\u0e49\u0e19\u0e17\u0e35\u0e48 \\(C_{111}\\) = 3 1. 111 -&gt; 011 : \\(ans\\) \u0e40\u0e1e\u0e34\u0e48\u0e21\u0e44\u0e1b \\(C_{011}\\) = 1 -&gt; 4 2. 011 -&gt; 001 : \\(ans\\) \u0e40\u0e1e\u0e34\u0e48\u0e21\u0e44\u0e1b \\(C_{001}\\) = 9 -&gt; 13</p> <p>\u0e14\u0e31\u0e07\u0e19\u0e31\u0e49\u0e19 \u0e04\u0e33\u0e15\u0e2d\u0e1a\u0e02\u0e2d\u0e07 Binary String \\(111\\) \u0e04\u0e37\u0e2d 13</p> <p>\u0e42\u0e14\u0e22\u0e42\u0e08\u0e17\u0e22\u0e4c\u0e08\u0e30\u0e01\u0e33\u0e2b\u0e19\u0e14 Binary String \u0e21\u0e32\u0e43\u0e2b\u0e49 \\(Q\\) \u0e2d\u0e31\u0e19 \u0e41\u0e25\u0e30\u0e43\u0e2b\u0e49\u0e15\u0e2d\u0e1a\u0e43\u0e2b\u0e49\u0e04\u0e23\u0e1a</p>"},{"location":"problems/toi20_bit_string/#_3","title":"\u0e2a\u0e34\u0e48\u0e07\u0e17\u0e35\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e17\u0e33","text":"<p>\u0e40\u0e02\u0e35\u0e22\u0e19\u0e42\u0e04\u0e49\u0e14\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e2b\u0e32 \u0e04\u0e48\u0e32\u0e25\u0e14\u0e17\u0e2d\u0e19\u0e04\u0e38\u0e13\u0e20\u0e32\u0e1e \u0e17\u0e35\u0e48\u0e21\u0e35\u0e04\u0e48\u0e32\u0e21\u0e32\u0e01\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14 \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a Binary String \u0e17\u0e31\u0e49\u0e07 \\(Q\\) \u0e2d\u0e31\u0e19</p> <p>Constraints</p> <ul> <li>\\(2 \\leq N \\leq 20\\)</li> <li>\\(-500,000 \\leq C_i \\leq 1,000,000\\)</li> </ul> <p>Prerequisites</p> <ul> <li>Bitmasks</li> <li>Dynamic Programming</li> </ul>"},{"location":"problems/toi20_bit_string/#bitmask-dp","title":"Bitmask DP","text":"<p>\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e02\u0e49\u0e2d\u0e19\u0e35\u0e49 \u0e40\u0e23\u0e32\u0e08\u0e30\u0e43\u0e0a\u0e49\u0e2a\u0e34\u0e48\u0e07\u0e17\u0e35\u0e48\u0e40\u0e23\u0e35\u0e22\u0e01\u0e27\u0e48\u0e32 Bitmask DP \u0e0b\u0e36\u0e48\u0e07\u0e40\u0e1b\u0e47\u0e19\u0e23\u0e39\u0e1b\u0e41\u0e1a\u0e1a\u0e01\u0e32\u0e23\u0e17\u0e33 Dynamic Programming \u0e17\u0e35\u0e48\u0e08\u0e30\u0e04\u0e48\u0e2d\u0e19\u0e02\u0e49\u0e32\u0e07\u0e1e\u0e34\u0e2a\u0e14\u0e32\u0e23\u0e40\u0e25\u0e47\u0e01\u0e19\u0e49\u0e2d\u0e22 </p> <p>\u0e42\u0e14\u0e22 Bitmask DP \u0e19\u0e31\u0e49\u0e19 \u0e25\u0e31\u0e01\u0e29\u0e13\u0e30\u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19\u0e01\u0e32\u0e23\u0e40\u0e25\u0e48\u0e19\u0e01\u0e31\u0e1a \u0e40\u0e25\u0e02\u0e10\u0e32\u0e19\u0e2a\u0e2d\u0e07 \u0e0b\u0e36\u0e48\u0e07\u0e41\u0e17\u0e19\u0e17\u0e35\u0e48\u0e08\u0e30\u0e40\u0e01\u0e47\u0e1a DP \u0e43\u0e19\u0e41\u0e15\u0e48\u0e25\u0e30 Index \u0e40\u0e23\u0e32\u0e08\u0e30\u0e40\u0e01\u0e47\u0e1a DP \u0e43\u0e19\u0e41\u0e15\u0e48\u0e25\u0e30 Mask (\u0e40\u0e25\u0e02\u0e10\u0e32\u0e19\u0e2a\u0e2d\u0e07) \u0e41\u0e17\u0e19 \u0e19\u0e31\u0e48\u0e19\u0e04\u0e37\u0e2d \u0e40\u0e23\u0e32\u0e08\u0e30\u0e21\u0e35\u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14 \\(2^N\\) Mask (\u0e40\u0e23\u0e32\u0e15\u0e49\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e40\u0e25\u0e48\u0e19\u0e01\u0e31\u0e1a\u0e17\u0e38\u0e01\u0e23\u0e39\u0e1b\u0e41\u0e1a\u0e1a\u0e02\u0e2d\u0e07\u0e40\u0e25\u0e02\u0e10\u0e32\u0e19\u0e2a\u0e2d\u0e07\u0e17\u0e35\u0e48\u0e21\u0e35 \\(N\\) \u0e2b\u0e25\u0e31\u0e01)</p> <p>\u0e42\u0e14\u0e22\u0e42\u0e08\u0e17\u0e22\u0e4c\u0e2a\u0e48\u0e27\u0e19\u0e43\u0e2b\u0e0d\u0e48\u0e19\u0e31\u0e49\u0e19 \u0e40\u0e23\u0e32\u0e08\u0e30\u0e40\u0e01\u0e47\u0e1a State DP \u0e43\u0e19\u0e25\u0e31\u0e01\u0e29\u0e13\u0e30\u0e02\u0e2d\u0e07  - \\(dp[mask] =\\) \u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e17\u0e33 operation \u0e1a\u0e32\u0e07\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e43\u0e2b\u0e49\u0e21\u0e32\u0e25\u0e07\u0e17\u0e35\u0e48 state \u0e17\u0e35\u0e48 \\(mask\\) \u0e44\u0e14\u0e49\u0e2b\u0e23\u0e37\u0e2d\u0e44\u0e21\u0e48 - \\(dp[mask] =\\) min/max value \u0e17\u0e35\u0e48\u0e08\u0e30\u0e19\u0e33\u0e1e\u0e32\u0e40\u0e23\u0e32\u0e21\u0e32\u0e22\u0e31\u0e07 state \u0e17\u0e35\u0e48 \\(mask\\)</p> <p>\u0e25\u0e31\u0e01\u0e29\u0e13\u0e30\u0e01\u0e32\u0e23\u0e17\u0e33 Bitmask DP \u0e17\u0e31\u0e48\u0e27\u0e44\u0e1b\u0e04\u0e37\u0e2d 1. loop \u0e15\u0e32\u0e21\u0e17\u0e38\u0e01\u0e46 \\(mask\\) \u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19\u0e44\u0e1b\u0e44\u0e14\u0e49 \\(O(2^N)\\) 2. \u0e25\u0e39\u0e1b\u0e15\u0e32\u0e21\u0e41\u0e15\u0e48\u0e25\u0e30\u0e15\u0e31\u0e27\u0e43\u0e19 \\(mask\\) \u0e19\u0e31\u0e49\u0e19 \u0e41\u0e25\u0e49\u0e27\u0e40\u0e0a\u0e47\u0e01\u0e27\u0e48\u0e32 \u0e2b\u0e32\u0e01\u0e2a\u0e31\u0e1a bit \u0e19\u0e31\u0e49\u0e19\u0e2d\u0e2d\u0e01 \\((1 &gt; 0)\\) \u0e41\u0e25\u0e49\u0e27 \\(dp\\) \u0e02\u0e2d\u0e07 state \u0e19\u0e31\u0e49\u0e19 \u0e40\u0e04\u0e22\u0e17\u0e33\u0e21\u0e32\u0e41\u0e25\u0e49\u0e27\u0e2b\u0e23\u0e37\u0e2d\u0e44\u0e21\u0e48 \u0e41\u0e25\u0e49\u0e27\u0e17\u0e33\u0e44\u0e14\u0e49\u0e21\u0e31\u0e49\u0e22 \u0e14\u0e31\u0e07\u0e23\u0e39\u0e1b\u0e14\u0e49\u0e32\u0e19\u0e25\u0e48\u0e32\u0e07 (\u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19\u0e17\u0e38\u0e01 bit \u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19 1 \u0e43\u0e2b\u0e49\u0e40\u0e1b\u0e47\u0e19 0 \u0e41\u0e25\u0e49\u0e27\u0e40\u0e0a\u0e47\u0e01)</p> <p>3. \u0e2b\u0e32\u0e01\u0e17\u0e33\u0e44\u0e14\u0e49 \u0e01\u0e47\u0e40\u0e2d\u0e32\u0e40\u0e02\u0e49\u0e32 cost function \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e19\u0e33\u0e21\u0e32\u0e43\u0e2a\u0e48\u0e43\u0e19 \\(dp[mask]\\) \u0e1b\u0e31\u0e08\u0e08\u0e38\u0e1a\u0e31\u0e19</p> <p>\u0e42\u0e14\u0e22\u0e43\u0e19\u0e42\u0e08\u0e17\u0e22\u0e4c\u0e02\u0e49\u0e2d\u0e19\u0e35\u0e49 \u0e40\u0e23\u0e32\u0e08\u0e30\u0e01\u0e33\u0e2b\u0e19\u0e14\u0e25\u0e31\u0e01\u0e29\u0e13\u0e30 DP \u0e40\u0e1b\u0e47\u0e19\u0e23\u0e39\u0e1b\u0e41\u0e1a\u0e1a\u0e17\u0e35\u0e48 2 \u0e19\u0e31\u0e48\u0e19\u0e04\u0e37\u0e2d \\(dp[mask] =\\) \u0e04\u0e48\u0e32\u0e17\u0e35\u0e48\u0e15\u0e48\u0e33\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14\u0e17\u0e35\u0e48\u0e08\u0e30\u0e19\u0e33\u0e40\u0e23\u0e32\u0e21\u0e32\u0e22\u0e31\u0e07 state \u0e17\u0e35\u0e48 \\(mask\\)</p>"},{"location":"problems/toi20_bit_string/#solution","title":"Solution","text":""},{"location":"problems/toi20_bit_string/#_4","title":"\u0e27\u0e34\u0e18\u0e35\u0e17\u0e33","text":"<p>\u0e01\u0e48\u0e2d\u0e19\u0e2d\u0e37\u0e48\u0e19 \u0e40\u0e23\u0e32\u0e01\u0e47\u0e08\u0e30\u0e15\u0e49\u0e2d\u0e07\u0e23\u0e31\u0e1a input \u0e27\u0e48\u0e32 \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e41\u0e15\u0e48\u0e25\u0e30 \\(mask\\) \u0e04\u0e48\u0e32\u0e25\u0e14\u0e17\u0e2d\u0e19\u0e04\u0e38\u0e13\u0e20\u0e32\u0e1e\u0e02\u0e2d\u0e07\u0e21\u0e31\u0e19\u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19\u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48 \u0e40\u0e23\u0e32\u0e01\u0e47\u0e08\u0e30\u0e23\u0e31\u0e1a input \u0e21\u0e32\u0e40\u0e1b\u0e47\u0e19 Binary String \u0e41\u0e25\u0e49\u0e27\u0e01\u0e47\u0e40\u0e02\u0e49\u0e32 function \\(binary\\) \u0e17\u0e35\u0e48\u0e40\u0e02\u0e35\u0e22\u0e19\u0e44\u0e27\u0e49 \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e41\u0e1b\u0e25\u0e07 Binary String \u0e40\u0e1b\u0e47\u0e19 \u0e40\u0e25\u0e02\u0e10\u0e32\u0e19\u0e2a\u0e34\u0e1a</p> <p>\u0e2b\u0e25\u0e31\u0e01\u0e08\u0e32\u0e01\u0e19\u0e31\u0e49\u0e19 \u0e40\u0e23\u0e32\u0e01\u0e47\u0e41\u0e04\u0e48\u0e19\u0e33\u0e44\u0e2d\u0e40\u0e14\u0e35\u0e22\u0e02\u0e2d\u0e07 Bitmask DP \u0e14\u0e49\u0e32\u0e19\u0e1a\u0e19 \u0e25\u0e07\u0e21\u0e32\u0e43\u0e0a\u0e49 \u0e42\u0e14\u0e22\u0e40\u0e23\u0e32\u0e08\u0e30\u0e40\u0e01\u0e47\u0e1a\u0e27\u0e48\u0e32 \u0e04\u0e33\u0e15\u0e2d\u0e1a\u0e17\u0e35\u0e48\u0e21\u0e32\u0e01\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a \\(dp[mask]\\) \u0e40\u0e1b\u0e47\u0e19\u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48 \u0e42\u0e14\u0e22\u0e40\u0e23\u0e32\u0e08\u0e30 Loop \u0e44\u0e1b\u0e17\u0e38\u0e01\u0e46 \\(mask\\) (\u0e19\u0e31\u0e48\u0e19\u0e04\u0e37\u0e2d \u0e27\u0e19 \\(2^N\\) \u0e23\u0e2d\u0e1a) \u0e42\u0e14\u0e22\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e41\u0e15\u0e48\u0e25\u0e30 \\(mask\\) \u0e08\u0e30\u0e04\u0e33\u0e19\u0e27\u0e13\u0e14\u0e31\u0e07\u0e19\u0e35\u0e49: Loop \u0e04\u0e23\u0e31\u0e49\u0e07\u0e17\u0e35\u0e48 1 (\u0e2a\u0e31\u0e1a\u0e2d\u0e2d\u0e01 1 bit)</p> <ul> <li>\u0e40\u0e0a\u0e47\u0e01\u0e41\u0e15\u0e48\u0e25\u0e30 index \u0e27\u0e48\u0e32 \\(mask\\) \u0e1b\u0e31\u0e08\u0e08\u0e38\u0e1a\u0e31\u0e19\u0e43\u0e19\u0e15\u0e33\u0e41\u0e2b\u0e19\u0e48\u0e07\u0e17\u0e35\u0e48 \\(i\\) \u0e40\u0e1b\u0e47\u0e19 1 \u0e2b\u0e23\u0e37\u0e2d 0<ul> <li>\u0e2b\u0e32\u0e01\u0e40\u0e1b\u0e47\u0e19 0 \u0e01\u0e47\u0e02\u0e49\u0e32\u0e21  </li> <li>\u0e2b\u0e32\u0e01\u0e40\u0e1b\u0e47\u0e19 1 \u0e43\u0e2b\u0e49\u0e40\u0e2d\u0e32 bit \u0e19\u0e31\u0e49\u0e19\u0e40\u0e1b\u0e47\u0e19 0 (\u0e15\u0e31\u0e49\u0e07\u0e0a\u0e37\u0e48\u0e2d\u0e27\u0e48\u0e32 \\(nm\\) \u0e22\u0e48\u0e2d\u0e08\u0e32\u0e01 \\(new mask\\)) \u0e41\u0e25\u0e49\u0e27\u0e01\u0e47   \u0e40\u0e01\u0e47\u0e1a \\(dp[mask] = \\max(dp[mask], dp[nm] + a[mask])\\) \u0e0b\u0e36\u0e48\u0e07\u0e04\u0e37\u0e2d cost function \u0e02\u0e2d\u0e07\u0e40\u0e23\u0e32</li> </ul> </li> </ul> <p>Loop \u0e04\u0e23\u0e31\u0e49\u0e07\u0e17\u0e35\u0e48 2 (\u0e2a\u0e31\u0e1a\u0e2d\u0e2d\u0e01 2 bit)</p> <ul> <li>\u0e40\u0e0a\u0e47\u0e01\u0e41\u0e15\u0e48\u0e25\u0e30 index \u0e27\u0e48\u0e32 \\(mask\\) \u0e1b\u0e31\u0e08\u0e08\u0e38\u0e1a\u0e31\u0e19\u0e43\u0e19\u0e15\u0e33\u0e41\u0e2b\u0e19\u0e48\u0e07\u0e17\u0e35\u0e48 \\(i\\) \u0e41\u0e25\u0e30 \\(i+1\\) \u0e40\u0e1b\u0e47\u0e19 1 \u0e2b\u0e23\u0e37\u0e2d 0<ul> <li>\u0e2b\u0e32\u0e01\u0e2a\u0e31\u0e01\u0e2d\u0e31\u0e19\u0e40\u0e1b\u0e47\u0e19 0 \u0e01\u0e47\u0e02\u0e49\u0e32\u0e21  </li> <li>\u0e2b\u0e32\u0e01\u0e40\u0e1b\u0e47\u0e19 1 \u0e17\u0e31\u0e49\u0e07\u0e04\u0e39\u0e48 \u0e43\u0e2b\u0e49\u0e40\u0e2d\u0e32\u0e17\u0e31\u0e49\u0e07\u0e2a\u0e2d\u0e07 bit \u0e19\u0e31\u0e49\u0e19\u0e40\u0e1b\u0e47\u0e19 0 (\u0e15\u0e31\u0e49\u0e07\u0e0a\u0e37\u0e48\u0e2d\u0e27\u0e48\u0e32 \\(nm\\) \u0e22\u0e48\u0e2d\u0e08\u0e32\u0e01 \\(new mask\\)) \u0e41\u0e25\u0e49\u0e27\u0e01\u0e47   \u0e40\u0e01\u0e47\u0e1a \\(dp[mask] = \\max(dp[mask], dp[nm] + a[mask])\\)</li> </ul> </li> </ul> <p>\u0e41\u0e25\u0e49\u0e27\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e23\u0e31\u0e1a\u0e04\u0e33\u0e16\u0e32\u0e21\u0e21\u0e32 \u0e40\u0e23\u0e32\u0e01\u0e47\u0e41\u0e04\u0e48\u0e2a\u0e48\u0e07 Output \u0e44\u0e1b\u0e40\u0e1b\u0e47\u0e19 \\(dp[input]\\) \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e41\u0e15\u0e48\u0e25\u0e30\u0e2d\u0e34\u0e19\u0e1e\u0e38\u0e15\u0e44\u0e14\u0e49\u0e40\u0e25\u0e22</p>"},{"location":"problems/toi20_bit_string/#code","title":"Code","text":"toi20_bit_string.cpp<pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst long long mod = 1e9 + 7;\nconst long long inf = 1e18;\n\nlong long binary(string s){\n    long long ans = 0;\n    reverse(all(s));\n    for (long long i = 0; i &lt; s.length(); i++) {\n        ans += (s[i] - '0') * (1 &lt;&lt; i);\n    }\n    return ans;\n}\n\nint32_t main(){\n    cin.tie(NULL)-&gt;sync_with_stdio(false);\n    long long n, q; cin &gt;&gt; n &gt;&gt; q;\n    vector &lt;long long&gt; a(1 &lt;&lt; n);\n    for (long long i = 0; i &lt; (1 &lt;&lt; n); i++) {\n        string s; cin &gt;&gt; s;\n        long long num; cin &gt;&gt; num;\n        a[binary(s)] = num;\n    }\n    vector &lt;long long&gt; dp(1 &lt;&lt; n, -inf); dp[0] = 0;\n    for (long long mask = 1; mask &lt; (1 &lt;&lt; n); mask++) {\n        // swap 1 bit\n        for (long long i = 0; i &lt; n; i++) {\n            if ((mask &amp; (1 &lt;&lt; i)) == 0) continue;\n            long long nm = mask ^ (1 &lt;&lt; i);\n            dp[mask] = max(dp[mask], dp[nm] + a[mask]);\n        }\n        // swap 2 bits\n        for (long long i = 0; i &lt; n - 1; i++) {\n            if ((mask &amp; (1 &lt;&lt; i)) == 0 || (mask &amp; (1 &lt;&lt; (i + 1))) == 0) continue;\n            long long nm = mask ^ (1 &lt;&lt; i) ^ (1 &lt;&lt; (i + 1));\n            dp[mask] = max(dp[mask], dp[nm] + a[mask]);\n        }\n    }\n    while (q--) {\n        string s; cin &gt;&gt; s;\n        cout &lt;&lt; dp[binary(s)] &lt;&lt; \"\\n\";\n    }\n}\n</code></pre> <p>Total Time Complexity</p> <p>\\(O(2^N \\cdot N)\\)</p> <p>\u0e2b\u0e32\u0e01\u0e21\u0e35\u0e02\u0e49\u0e2d\u0e2a\u0e07\u0e2a\u0e31\u0e22 comment \u0e44\u0e27\u0e49\u0e43\u0e15\u0e49 post \u0e44\u0e14\u0e49\u0e40\u0e25\u0e22\u0e19\u0e30\u0e04\u0e23\u0e31\u0e1a \ud83d\ude47\u200d\u2642\ufe0f\ud83d\ude47\u200d\u2642\ufe0f  </p>"},{"location":"problems/toi20_orbs/","title":"toi20_orbs","text":""},{"location":"problems/toi20_orbs/#problem","title":"Problem","text":""},{"location":"problems/toi20_orbs/#_1","title":"\u0e2a\u0e23\u0e38\u0e1b\u0e42\u0e08\u0e17\u0e22\u0e4c","text":"<p>\u0e21\u0e35\u0e25\u0e39\u0e01\u0e41\u0e01\u0e49\u0e27 \\(N\\) \u0e25\u0e39\u0e01 \u0e25\u0e39\u0e01\u0e17\u0e35\u0e48 \\(i\\) \u0e2b\u0e19\u0e31\u0e01 \\(w_i\\) \u0e42\u0e14\u0e22\u0e40\u0e23\u0e32\u0e08\u0e30\u0e17\u0e33\u0e01\u0e32\u0e23\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e25\u0e39\u0e01\u0e41\u0e01\u0e49\u0e27\u0e2a\u0e2d\u0e07\u0e25\u0e39\u0e01 \\(L\\) \u0e04\u0e23\u0e31\u0e49\u0e07 \u0e42\u0e14\u0e22\u0e43\u0e19\u0e17\u0e38\u0e01\u0e46\u0e04\u0e23\u0e31\u0e49\u0e07\u0e08\u0e30\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e25\u0e39\u0e01\u0e41\u0e01\u0e49\u0e27\u0e17\u0e35\u0e48\u0e21\u0e35\u0e19\u0e49\u0e33\u0e2b\u0e19\u0e31\u0e01\u0e40\u0e1b\u0e47\u0e19\u0e2d\u0e31\u0e19\u0e14\u0e31\u0e1a\u0e17\u0e35\u0e48 \\(a\\) \u0e40\u0e1b\u0e47\u0e19\u0e25\u0e39\u0e01\u0e41\u0e23\u0e01\u0e41\u0e25\u0e30\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e25\u0e39\u0e01\u0e41\u0e01\u0e49\u0e27\u0e19\u0e49\u0e33\u0e2b\u0e19\u0e31\u0e01\u0e40\u0e1b\u0e47\u0e19\u0e2d\u0e31\u0e19\u0e14\u0e31\u0e1a\u0e17\u0e35\u0e48 \\(b\\) \u0e40\u0e1b\u0e47\u0e19\u0e25\u0e39\u0e01\u0e17\u0e35\u0e48\u0e2a\u0e2d\u0e07\u0e44\u0e1b\u0e43\u0e2a\u0e48\u0e43\u0e19\u0e40\u0e04\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e08\u0e31\u0e01\u0e23</p> <p>\u0e2a\u0e34\u0e48\u0e07\u0e17\u0e35\u0e48\u0e40\u0e01\u0e34\u0e14\u0e02\u0e36\u0e49\u0e19\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e43\u0e2a\u0e48\u0e25\u0e39\u0e01\u0e41\u0e01\u0e49\u0e27\u0e17\u0e35\u0e48\u0e21\u0e35\u0e19\u0e49\u0e33\u0e2b\u0e19\u0e31\u0e01\u0e40\u0e17\u0e48\u0e32\u0e01\u0e31\u0e1a \\(p,q\\) \u0e40\u0e1b\u0e47\u0e19\u0e25\u0e39\u0e01\u0e41\u0e23\u0e01\u0e01\u0e31\u0e1a\u0e25\u0e39\u0e01\u0e17\u0e35\u0e48\u0e2a\u0e2d\u0e07\u0e15\u0e32\u0e21\u0e25\u0e33\u0e14\u0e31\u0e1a\u0e43\u0e19\u0e40\u0e04\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e08\u0e31\u0e01\u0e23:\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e43\u0e2a\u0e48\u0e43\u0e19\u0e40\u0e04\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e08\u0e31\u0e01\u0e23\u0e41\u0e25\u0e49\u0e27 \u0e40\u0e04\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e08\u0e31\u0e01\u0e23\u0e08\u0e30\u0e17\u0e33\u0e25\u0e32\u0e22\u0e25\u0e39\u0e01\u0e41\u0e01\u0e49\u0e27\u0e17\u0e31\u0e49\u0e07\u0e2a\u0e2d\u0e07\u0e25\u0e39\u0e01\u0e41\u0e25\u0e30\u0e43\u0e2b\u0e49\u0e25\u0e39\u0e01\u0e41\u0e01\u0e49\u0e27\u0e17\u0e35\u0e48\u0e21\u0e35\u0e19\u0e49\u0e33\u0e2b\u0e19\u0e31\u0e01 \\(q-p\\) \u0e01\u0e31\u0e1a\u0e25\u0e39\u0e01\u0e41\u0e01\u0e49\u0e27\u0e17\u0e35\u0e48\u0e21\u0e35\u0e19\u0e49\u0e33\u0e2b\u0e19\u0e31\u0e01 \\(\u230a\\frac{p+q}{2}\u230b\\) \u0e2d\u0e2d\u0e01\u0e21\u0e32\u0e41\u0e17\u0e19</p> <p>\u0e2b\u0e21\u0e32\u0e22\u0e40\u0e2b\u0e15\u0e38: \\(\u230ax\u230b\\) \u0e2b\u0e21\u0e32\u0e22\u0e16\u0e36\u0e07 floor function \u0e02\u0e2d\u0e07 \\(x\\) \u0e0b\u0e36\u0e48\u0e07\u0e40\u0e1b\u0e47\u0e19\u0e08\u0e33\u0e19\u0e27\u0e19\u0e40\u0e15\u0e47\u0e21\u0e17\u0e35\u0e48\u0e21\u0e35\u0e04\u0e48\u0e32\u0e21\u0e32\u0e01\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14\u0e17\u0e35\u0e48\u0e19\u0e49\u0e2d\u0e22\u0e01\u0e27\u0e48\u0e32\u0e2b\u0e23\u0e37\u0e2d\u0e40\u0e17\u0e48\u0e32\u0e01\u0e31\u0e1a \\(x\\)</p>"},{"location":"problems/toi20_orbs/#_2","title":"\u0e2a\u0e34\u0e48\u0e07\u0e17\u0e35\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e17\u0e33","text":"<p>\u0e43\u0e2b\u0e49 print \u0e19\u0e49\u0e33\u0e2b\u0e19\u0e31\u0e01\u0e25\u0e39\u0e01\u0e41\u0e01\u0e49\u0e27\u0e17\u0e35\u0e48\u0e40\u0e23\u0e35\u0e22\u0e07\u0e08\u0e32\u0e01\u0e19\u0e49\u0e2d\u0e22\u0e44\u0e1b\u0e21\u0e32\u0e01</p> <p>Prerequisites</p> <ul> <li>Multiset</li> </ul> <p>Constraints</p> <ul> <li>\\(2 \\leq N \\leq 2\\cdot 10^6\\)</li> <li>\\(1 \\leq L \\leq 2\\cdot 10^6\\)</li> <li>\\(1\\leq a &lt; b \\leq N\\)</li> <li>\\(1 \\leq w_i \\leq 10^9\\)</li> </ul>"},{"location":"problems/toi20_orbs/#solution","title":"Solution","text":""},{"location":"problems/toi20_orbs/#_3","title":"\u0e27\u0e34\u0e18\u0e35\u0e17\u0e33","text":"<p>\u0e2a\u0e31\u0e07\u0e40\u0e01\u0e15\u0e44\u0e14\u0e49\u0e27\u0e48\u0e32\u0e08\u0e30\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e25\u0e39\u0e01\u0e41\u0e01\u0e49\u0e27\u0e17\u0e35\u0e48\u0e17\u0e35\u0e19\u0e49\u0e33\u0e2b\u0e19\u0e31\u0e01\u0e40\u0e1b\u0e47\u0e19\u0e2d\u0e31\u0e19\u0e14\u0e31\u0e1a\u0e17\u0e35\u0e48 \\(a\\) \u0e01\u0e31\u0e1a \\(b\\) \u0e40\u0e2a\u0e21\u0e2d\u0e41\u0e1b\u0e25\u0e27\u0e48\u0e32\u0e40\u0e23\u0e32\u0e41\u0e04\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e43\u0e0a\u0e49 Data Structure \u0e17\u0e35\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e2b\u0e32\u0e04\u0e48\u0e32\u0e43\u0e19\u0e2d\u0e31\u0e19\u0e14\u0e31\u0e1a\u0e17\u0e35\u0e48 \\(a\\) \u0e41\u0e25\u0e30\u0e2d\u0e31\u0e19\u0e14\u0e31\u0e1a\u0e17\u0e35\u0e48 \\(b\\) \u0e44\u0e14\u0e49\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e23\u0e27\u0e14\u0e40\u0e23\u0e47\u0e27 \u0e14\u0e31\u0e07\u0e19\u0e31\u0e49\u0e19\u0e40\u0e23\u0e32\u0e08\u0e36\u0e07\u0e04\u0e27\u0e23\u0e43\u0e0a\u0e49 multiset \u0e40\u0e1b\u0e47\u0e19 Data Structure \u0e19\u0e31\u0e49\u0e19\u0e41\u0e25\u0e30\u0e17\u0e33\u0e43\u0e2b\u0e49\u0e21\u0e35\u0e23\u0e39\u0e1b\u0e41\u0e1a\u0e1a\u0e40\u0e2b\u0e21\u0e37\u0e2d\u0e19\u0e01\u0e31\u0e1a\u0e23\u0e39\u0e1b\u0e15\u0e48\u0e2d\u0e44\u0e1b\u0e19\u0e35\u0e49 </p> <p>\u0e42\u0e14\u0e22 1.\u0e25\u0e39\u0e01\u0e41\u0e01\u0e49\u0e27\u0e43\u0e19 multiset1 \u0e17\u0e38\u0e01\u0e25\u0e39\u0e01\u0e08\u0e30\u0e15\u0e49\u0e2d\u0e07\u0e19\u0e49\u0e2d\u0e22\u0e01\u0e27\u0e48\u0e32\u0e25\u0e39\u0e01\u0e41\u0e01\u0e49\u0e27\u0e43\u0e19 multiset2 \u0e17\u0e38\u0e01\u0e25\u0e39\u0e01 2.\u0e25\u0e39\u0e01\u0e41\u0e01\u0e49\u0e27\u0e43\u0e19 multiset2 \u0e17\u0e38\u0e01\u0e25\u0e39\u0e01\u0e08\u0e30\u0e15\u0e49\u0e2d\u0e07\u0e19\u0e49\u0e2d\u0e22\u0e01\u0e27\u0e48\u0e32\u0e25\u0e39\u0e01\u0e41\u0e01\u0e49\u0e27\u0e43\u0e19 multiset3 \u0e17\u0e38\u0e01\u0e25\u0e39\u0e01</p> <p>\u0e16\u0e49\u0e32\u0e43\u0e2b\u0e49 \\(p\\) \u0e40\u0e1b\u0e47\u0e19\u0e04\u0e48\u0e32\u0e19\u0e49\u0e33\u0e2b\u0e19\u0e31\u0e01\u0e43\u0e19\u0e2d\u0e31\u0e19\u0e14\u0e31\u0e1a\u0e17\u0e35\u0e48 \\(a\\) \u0e41\u0e25\u0e30 \\(q\\) \u0e40\u0e1b\u0e47\u0e19\u0e04\u0e48\u0e32\u0e19\u0e49\u0e33\u0e2b\u0e19\u0e31\u0e01\u0e43\u0e19\u0e2d\u0e31\u0e19\u0e14\u0e31\u0e1a\u0e17\u0e35\u0e48 \\(b\\)  \u0e08\u0e30\u0e2a\u0e31\u0e07\u0e40\u0e01\u0e15\u0e44\u0e14\u0e49\u0e27\u0e48\u0e32 \\(q-p,\u230a\\frac{p+q}{2}\u230b \\leq q\\) \u0e14\u0e31\u0e07\u0e19\u0e31\u0e49\u0e19\u0e40\u0e27\u0e25\u0e32\u0e43\u0e2a\u0e48\u0e25\u0e39\u0e01\u0e41\u0e01\u0e49\u0e27\u0e01\u0e25\u0e31\u0e1a\u0e40\u0e23\u0e32\u0e08\u0e33\u0e40\u0e1b\u0e47\u0e19\u0e15\u0e49\u0e2d\u0e07\u0e43\u0e2a\u0e48\u0e43\u0e19 multiset1 \u0e2b\u0e23\u0e37\u0e2d multiset2 \u0e40\u0e17\u0e48\u0e32\u0e19\u0e31\u0e49\u0e19 \u0e42\u0e14\u0e22\u0e43\u0e2a\u0e48\u0e43\u0e19 multiset2 \u0e01\u0e48\u0e2d\u0e19\u0e41\u0e25\u0e49\u0e27\u0e04\u0e48\u0e2d\u0e22\u0e22\u0e49\u0e32\u0e22\u0e25\u0e39\u0e01\u0e41\u0e01\u0e49\u0e27\u0e21\u0e32\u0e43\u0e19 multiset1 \u0e42\u0e14\u0e22\u0e43\u0e2b\u0e49\u0e40\u0e07\u0e37\u0e48\u0e2d\u0e19\u0e44\u0e02 1 \u0e22\u0e31\u0e07\u0e40\u0e1b\u0e47\u0e19\u0e08\u0e23\u0e34\u0e07</p>"},{"location":"problems/toi20_orbs/#code","title":"Code","text":"toi20_orbs.cpp<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nint main(){\n    cin.tie(NULL)-&gt;sync_with_stdio(false);\n    int n, t, l, r;\n    cin &gt;&gt; n &gt;&gt; t &gt;&gt; l &gt;&gt; r;\n    vector &lt;int&gt; v(n);\n    for(int i = 0; i &lt; n; i++) cin &gt;&gt; v[i];\n    sort(v.begin(), v.end());\n    multiset&lt;int&gt; a, b, o;\n    for(int i = 0; i &lt; l; i++){\n        a.insert(v[i]);\n    }\n    for(int i = l; i &lt; r; i++){\n        b.insert(v[i]);\n    }\n    for(int i = r; i &lt; n; i++){\n        o.insert(v[i]);\n    }\n\n    while(t--){\n        int x = *--a.end();\n        int y = *--b.end();\n        a.erase(--a.end());\n        b.erase(--b.end());\n        int new1 = y - x, new2 = (x + y) / 2;\n        b.insert(new1);\n        b.insert(new2);\n        int firstB = *b.begin();\n        b.erase(b.begin());\n        a.insert(firstB);\n        if (*--a.end() &gt; *b.begin()) {\n            int temp1 = *--a.end(), temp2 = *b.begin();\n            a.erase(--a.end());\n            b.erase(b.begin());\n            a.insert(temp2);\n            b.insert(temp1);\n        }\n    }\n\n    for(int i : a) cout &lt;&lt; i &lt;&lt; ' ';\n    for(int i : b) cout &lt;&lt; i &lt;&lt; ' ';\n    for(int i : o) cout &lt;&lt; i &lt;&lt; ' ';\n}\n</code></pre> <p>Total Time Complexity</p> <p>\\(O(N\\log N)\\)</p> <p>\u0e2b\u0e32\u0e01\u0e21\u0e35\u0e02\u0e49\u0e2d\u0e2a\u0e07\u0e2a\u0e31\u0e22 comment \u0e44\u0e27\u0e49\u0e43\u0e15\u0e49 post \u0e44\u0e14\u0e49\u0e40\u0e25\u0e22\u0e19\u0e30\u0e04\u0e23\u0e31\u0e1a \ud83d\ude47\u200d\u2642\ufe0f\ud83d\ude47\u200d\u2642\ufe0f  </p>"},{"location":"problems/toi20_tour/","title":"\u0e04\u0e33\u0e2d\u0e18\u0e34\u0e1a\u0e32\u0e22\u0e27\u0e34\u0e18\u0e35\u0e17\u0e33\u0e1e\u0e23\u0e49\u0e2d\u0e21 code \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e02\u0e49\u0e2d toi21_duty_free","text":""},{"location":"problems/toi20_tour/#_1","title":"\u0e2a\u0e23\u0e38\u0e1b\u0e42\u0e08\u0e17\u0e22\u0e4c","text":"<p>\u0e40\u0e23\u0e32\u0e21\u0e35\u0e25\u0e39\u0e01\u0e04\u0e49\u0e32\u0e08\u0e30\u0e0b\u0e37\u0e49\u0e2d\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32 <code>N</code> \u0e04\u0e19 \u0e44\u0e25\u0e48\u0e04\u0e34\u0e27\u0e08\u0e32\u0e01\u0e04\u0e19\u0e17\u0e35\u0e48 <code>1</code> \u0e16\u0e36\u0e07\u0e04\u0e19\u0e17\u0e35\u0e48 <code>N</code> \u0e42\u0e14\u0e22\u0e04\u0e19\u0e17\u0e35\u0e48 <code>i</code> \u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e40\u0e14\u0e34\u0e19\u0e44\u0e14\u0e49\u0e44\u0e01\u0e25\u0e2a\u0e38\u0e14 <code>max_allowed_positions[i - 1]</code> \u0e15\u0e33\u0e41\u0e2b\u0e19\u0e48\u0e07 \u0e42\u0e14\u0e22:</p> <ul> <li>\u0e25\u0e39\u0e01\u0e04\u0e49\u0e32\u0e41\u0e15\u0e48\u0e25\u0e30\u0e04\u0e19\u0e08\u0e30\u0e40\u0e14\u0e34\u0e19\u0e15\u0e23\u0e07\u0e44\u0e1b\u0e2b\u0e22\u0e34\u0e1a\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e02\u0e2d\u0e07\u0e15\u0e19 \u0e42\u0e14\u0e22\u0e44\u0e21\u0e48\u0e2b\u0e22\u0e34\u0e1a\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e02\u0e2d\u0e07\u0e04\u0e19\u0e2d\u0e37\u0e48\u0e19</li> <li>\u0e1e\u0e19\u0e31\u0e01\u0e07\u0e32\u0e19\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e19\u0e33\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e17\u0e35\u0e48\u0e40\u0e2b\u0e25\u0e37\u0e2d\u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14\u0e21\u0e32\u0e08\u0e31\u0e14\u0e27\u0e32\u0e07\u0e43\u0e2b\u0e21\u0e48\u0e1a\u0e19\u0e0a\u0e31\u0e49\u0e19\u0e27\u0e32\u0e07\u0e41\u0e15\u0e48\u0e25\u0e30\u0e2b\u0e21\u0e32\u0e22\u0e40\u0e25\u0e02\u0e44\u0e14\u0e49\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e2d\u0e34\u0e2a\u0e23\u0e30 (\u0e20\u0e32\u0e22\u0e43\u0e15\u0e49\u0e40\u0e07\u0e37\u0e48\u0e2d\u0e19\u0e44\u0e02 1 \u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32 \u0e15\u0e48\u0e2d 1 \u0e0a\u0e31\u0e49\u0e19\u0e27\u0e32\u0e07)</li> </ul>"},{"location":"problems/toi20_tour/#_2","title":"\u0e2a\u0e34\u0e48\u0e07\u0e17\u0e35\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e17\u0e33","text":"<p>\u0e40\u0e02\u0e35\u0e22\u0e19\u0e42\u0e04\u0e49\u0e14\u0e17\u0e35\u0e48\u0e08\u0e30\u0e04\u0e33\u0e19\u0e27\u0e13\u0e08\u0e33\u0e19\u0e27\u0e19\u0e04\u0e23\u0e31\u0e49\u0e07\u0e17\u0e35\u0e48\u0e1e\u0e19\u0e31\u0e01\u0e07\u0e32\u0e19\u0e15\u0e49\u0e2d\u0e07\u0e08\u0e31\u0e14\u0e27\u0e32\u0e07\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e43\u0e2b\u0e21\u0e48\u0e43\u0e2b\u0e49\u0e19\u0e49\u0e2d\u0e22\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14</p>"},{"location":"problems/toi20_tour/#_3","title":"\u0e02\u0e2d\u0e1a\u0e40\u0e02\u0e15\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25","text":""},{"location":"problems/toi21_duty_free/","title":"toi21_duty_free","text":"","tags":["TOI","Bruteforce","Disjoint Set Union","Hard"]},{"location":"problems/toi21_duty_free/#problem","title":"Problem","text":"","tags":["TOI","Bruteforce","Disjoint Set Union","Hard"]},{"location":"problems/toi21_duty_free/#_1","title":"\u0e2a\u0e23\u0e38\u0e1b\u0e42\u0e08\u0e17\u0e22\u0e4c","text":"<p>\u0e40\u0e23\u0e32\u0e21\u0e35\u0e25\u0e39\u0e01\u0e04\u0e49\u0e32\u0e08\u0e30\u0e0b\u0e37\u0e49\u0e2d\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32 <code>N</code> \u0e04\u0e19 \u0e44\u0e25\u0e48\u0e04\u0e34\u0e27\u0e08\u0e32\u0e01\u0e04\u0e19\u0e17\u0e35\u0e48 <code>1</code> \u0e16\u0e36\u0e07\u0e04\u0e19\u0e17\u0e35\u0e48 <code>N</code> \u0e42\u0e14\u0e22\u0e04\u0e19\u0e17\u0e35\u0e48 <code>i</code> \u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e40\u0e14\u0e34\u0e19\u0e44\u0e14\u0e49\u0e44\u0e01\u0e25\u0e2a\u0e38\u0e14 <code>max_allowed_positions[i - 1]</code> \u0e15\u0e33\u0e41\u0e2b\u0e19\u0e48\u0e07 \u0e42\u0e14\u0e22:</p> <ul> <li>\u0e25\u0e39\u0e01\u0e04\u0e49\u0e32\u0e41\u0e15\u0e48\u0e25\u0e30\u0e04\u0e19\u0e08\u0e30\u0e40\u0e14\u0e34\u0e19\u0e15\u0e23\u0e07\u0e44\u0e1b\u0e2b\u0e22\u0e34\u0e1a\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e02\u0e2d\u0e07\u0e15\u0e19 \u0e42\u0e14\u0e22\u0e44\u0e21\u0e48\u0e2b\u0e22\u0e34\u0e1a\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e02\u0e2d\u0e07\u0e04\u0e19\u0e2d\u0e37\u0e48\u0e19</li> <li>\u0e1e\u0e19\u0e31\u0e01\u0e07\u0e32\u0e19\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e19\u0e33\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e17\u0e35\u0e48\u0e40\u0e2b\u0e25\u0e37\u0e2d\u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14\u0e21\u0e32\u0e08\u0e31\u0e14\u0e27\u0e32\u0e07\u0e43\u0e2b\u0e21\u0e48\u0e1a\u0e19\u0e0a\u0e31\u0e49\u0e19\u0e27\u0e32\u0e07\u0e41\u0e15\u0e48\u0e25\u0e30\u0e2b\u0e21\u0e32\u0e22\u0e40\u0e25\u0e02\u0e44\u0e14\u0e49\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e2d\u0e34\u0e2a\u0e23\u0e30 (\u0e20\u0e32\u0e22\u0e43\u0e15\u0e49\u0e40\u0e07\u0e37\u0e48\u0e2d\u0e19\u0e44\u0e02 1 \u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32 \u0e15\u0e48\u0e2d 1 \u0e0a\u0e31\u0e49\u0e19\u0e27\u0e32\u0e07)</li> </ul>","tags":["TOI","Bruteforce","Disjoint Set Union","Hard"]},{"location":"problems/toi21_duty_free/#_2","title":"\u0e2a\u0e34\u0e48\u0e07\u0e17\u0e35\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e17\u0e33","text":"<p>\u0e40\u0e02\u0e35\u0e22\u0e19\u0e42\u0e04\u0e49\u0e14\u0e17\u0e35\u0e48\u0e08\u0e30\u0e04\u0e33\u0e19\u0e27\u0e13\u0e08\u0e33\u0e19\u0e27\u0e19\u0e04\u0e23\u0e31\u0e49\u0e07\u0e17\u0e35\u0e48\u0e1e\u0e19\u0e31\u0e01\u0e07\u0e32\u0e19\u0e15\u0e49\u0e2d\u0e07\u0e08\u0e31\u0e14\u0e27\u0e32\u0e07\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e43\u0e2b\u0e21\u0e48\u0e43\u0e2b\u0e49\u0e19\u0e49\u0e2d\u0e22\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14</p> <p>Constraints</p> <p>\\(1 \\leq N \\leq 2,000,000\\) \\(1 \\leq max\\_allowed\\_positions[i-1] \\leq N\\)</p> <p>Prerequisites</p> <ul> <li>DSU (Disjoint Set Union)</li> </ul>","tags":["TOI","Bruteforce","Disjoint Set Union","Hard"]},{"location":"problems/toi21_duty_free/#solution","title":"Solution","text":"","tags":["TOI","Bruteforce","Disjoint Set Union","Hard"]},{"location":"problems/toi21_duty_free/#_3","title":"\u0e44\u0e2d\u0e40\u0e14\u0e35\u0e22\u0e2b\u0e25\u0e31\u0e01","text":"<p>\u0e40\u0e23\u0e32\u0e08\u0e30\u0e1e\u0e22\u0e32\u0e22\u0e32\u0e21\u0e27\u0e32\u0e07\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e02\u0e2d\u0e07\u0e25\u0e39\u0e01\u0e04\u0e49\u0e32\u0e04\u0e19\u0e17\u0e35\u0e48 <code>i</code> \u0e43\u0e2b\u0e49\u0e2d\u0e22\u0e39\u0e48\u0e44\u0e01\u0e25\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14\u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19\u0e44\u0e1b\u0e44\u0e14\u0e49 \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e08\u0e30\u0e44\u0e14\u0e49\u0e21\u0e35\u0e1e\u0e37\u0e49\u0e19\u0e17\u0e35\u0e48\u0e14\u0e49\u0e32\u0e19\u0e2b\u0e19\u0e49\u0e32\u0e43\u0e2b\u0e49\u0e01\u0e31\u0e1a\u0e25\u0e39\u0e01\u0e04\u0e49\u0e32\u0e04\u0e19\u0e2d\u0e37\u0e48\u0e19\u0e17\u0e35\u0e48 <code>max_allowed_positions[i - 1]</code> \u0e21\u0e35\u0e04\u0e48\u0e32\u0e19\u0e49\u0e2d\u0e22 \u0e46</p>","tags":["TOI","Bruteforce","Disjoint Set Union","Hard"]},{"location":"problems/toi21_duty_free/#_4","title":"\u0e27\u0e34\u0e18\u0e35\u0e17\u0e33","text":"<p>\u0e27\u0e34\u0e18\u0e35\u0e01\u0e32\u0e23\u0e40\u0e02\u0e35\u0e22\u0e19\u0e41\u0e1a\u0e1a Brute Force \u0e04\u0e37\u0e2d \u0e40\u0e23\u0e32\u0e08\u0e30\u0e21\u0e35 array \u0e17\u0e35\u0e48\u0e08\u0e30\u0e40\u0e01\u0e47\u0e1a\u0e27\u0e48\u0e32 \\(arr[i] =\\) \u0e0a\u0e31\u0e49\u0e19\u0e27\u0e32\u0e07\u0e17\u0e35\u0e48 \\(i\\) \u0e44\u0e14\u0e49\u0e27\u0e32\u0e07\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e44\u0e27\u0e49\u0e2b\u0e23\u0e37\u0e2d\u0e22\u0e31\u0e07 (\u0e15\u0e2d\u0e19\u0e40\u0e23\u0e34\u0e48\u0e21\u0e15\u0e49\u0e19 <code>arr[i] = false</code> \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e17\u0e38\u0e01\u0e46 \\(i\\)) \u0e42\u0e14\u0e22\u0e40\u0e23\u0e32\u0e08\u0e30\u0e40\u0e23\u0e34\u0e48\u0e21 loop \u0e08\u0e32\u0e01 slot \u0e17\u0e35\u0e48 \\(max\\_allowed\\_positions[i - 1]\\) \u0e44\u0e1b\u0e08\u0e19\u0e16\u0e36\u0e07 \\(1\\) \u0e41\u0e25\u0e49\u0e27\u0e16\u0e49\u0e32\u0e2b\u0e32\u0e01\u0e27\u0e48\u0e32\u0e0a\u0e48\u0e2d\u0e07\u0e17\u0e35\u0e48\u0e40\u0e23\u0e32\u0e01\u0e33\u0e25\u0e31\u0e07\u0e15\u0e23\u0e27\u0e08\u0e2a\u0e2d\u0e1a\u0e2d\u0e22\u0e39\u0e48\u0e22\u0e31\u0e07\u0e44\u0e21\u0e48\u0e44\u0e14\u0e49\u0e27\u0e32\u0e07\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e44\u0e27\u0e49 (<code>arr[i] == false</code>) \u0e40\u0e23\u0e32\u0e08\u0e30 mark \u0e0a\u0e48\u0e2d\u0e07\u0e19\u0e31\u0e49\u0e19\u0e27\u0e48\u0e32\u0e16\u0e39\u0e01\u0e43\u0e0a\u0e49\u0e41\u0e25\u0e49\u0e27 (<code>arr[i] = true</code>)  </p> <p>\u0e41\u0e25\u0e30\u0e16\u0e49\u0e32\u0e2b\u0e32\u0e01\u0e27\u0e48\u0e32\u0e40\u0e23\u0e32 loop \u0e08\u0e32\u0e01 \\(max\\_allowed\\_positions[i - 1]\\) \u0e16\u0e36\u0e07 \\(1\\) \u0e41\u0e25\u0e49\u0e27\u0e44\u0e21\u0e48\u0e21\u0e35\u0e0a\u0e48\u0e2d\u0e07\u0e43\u0e14\u0e17\u0e35\u0e48\u0e27\u0e48\u0e32\u0e07\u0e40\u0e25\u0e22 \u0e41\u0e2a\u0e14\u0e07\u0e27\u0e48\u0e32 \u0e17\u0e38\u0e01\u0e46\u0e0a\u0e48\u0e2d\u0e07\u0e17\u0e35\u0e48\u0e25\u0e39\u0e01\u0e04\u0e49\u0e32\u0e04\u0e19\u0e19\u0e35\u0e49\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e40\u0e14\u0e34\u0e19\u0e44\u0e1b\u0e44\u0e14\u0e49 \u0e44\u0e21\u0e48\u0e21\u0e35\u0e0a\u0e48\u0e2d\u0e07\u0e44\u0e2b\u0e19\u0e27\u0e48\u0e32\u0e07\u0e40\u0e25\u0e22 \u0e40\u0e23\u0e32\u0e08\u0e30 reset array \u0e42\u0e14\u0e22\u0e15\u0e31\u0e49\u0e07\u0e43\u0e2b\u0e49\u0e17\u0e38\u0e01\u0e0a\u0e48\u0e2d\u0e07\u0e40\u0e1b\u0e47\u0e19 \\(false\\) \u0e41\u0e25\u0e30\u0e01\u0e47\u0e04\u0e33\u0e19\u0e27\u0e13\u0e40\u0e2b\u0e21\u0e37\u0e2d\u0e19\u0e40\u0e14\u0e34\u0e21\u0e08\u0e19\u0e04\u0e23\u0e1a \\(N\\) \u0e04\u0e19</p> <p>\u0e1b\u0e31\u0e0d\u0e2b\u0e32\u0e02\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e40\u0e02\u0e35\u0e22\u0e19\u0e27\u0e34\u0e18\u0e35\u0e19\u0e35\u0e49\u0e04\u0e37\u0e2d time complexity \u0e43\u0e19\u0e01\u0e23\u0e13\u0e35\u0e17\u0e35\u0e48\u0e41\u0e22\u0e48\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14 \u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19 \\(O(n^2)\\) \u0e0b\u0e36\u0e48\u0e07\u0e22\u0e31\u0e07\u0e44\u0e07\u0e01\u0e47\u0e08\u0e30\u0e42\u0e14\u0e19 TLE \u0e41\u0e19\u0e48\u0e46</p> <p>\u0e14\u0e31\u0e07\u0e19\u0e31\u0e49\u0e19 \u0e04\u0e27\u0e32\u0e21\u0e22\u0e32\u0e01\u0e02\u0e2d\u0e07\u0e42\u0e08\u0e17\u0e22\u0e4c\u0e02\u0e49\u0e2d\u0e19\u0e35\u0e49\u0e04\u0e37\u0e2d \u0e27\u0e34\u0e18\u0e35\u0e01\u0e32\u0e23\u0e17\u0e35\u0e48\u0e40\u0e23\u0e32\u0e08\u0e30 optimize \u0e42\u0e04\u0e49\u0e14\u0e43\u0e2b\u0e49\u0e40\u0e2b\u0e25\u0e37\u0e2d \\(O(n)\\) \u0e42\u0e14\u0e22\u0e40\u0e23\u0e32\u0e08\u0e30\u0e43\u0e0a\u0e49 DSU (Disjoint Set Union) \u0e43\u0e19\u0e01\u0e32\u0e23 optimize \u0e42\u0e04\u0e49\u0e14\u0e02\u0e49\u0e2d\u0e19\u0e35\u0e49</p>","tags":["TOI","Bruteforce","Disjoint Set Union","Hard"]},{"location":"problems/toi21_duty_free/#optimize","title":"\u0e27\u0e34\u0e18\u0e35\u0e01\u0e32\u0e23 optimize","text":"<p>\u0e40\u0e23\u0e32\u0e08\u0e30\u0e40\u0e01\u0e47\u0e1a auxiliary array \u0e0b\u0e36\u0e48\u0e07\u0e08\u0e30\u0e40\u0e01\u0e47\u0e1a\u0e27\u0e48\u0e32 \u0e0a\u0e31\u0e49\u0e19\u0e27\u0e32\u0e07\u0e17\u0e35\u0e48 \\(i\\) \u0e40\u0e23\u0e32\u0e08\u0e30\u0e27\u0e32\u0e07\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e02\u0e2d\u0e07\u0e25\u0e39\u0e01\u0e04\u0e49\u0e32\u0e04\u0e19\u0e17\u0e35\u0e48\u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48 \u0e41\u0e25\u0e30\u0e40\u0e23\u0e32\u0e08\u0e30\u0e40\u0e01\u0e47\u0e1a\u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23\u0e40\u0e1e\u0e34\u0e48\u0e21 1 \u0e15\u0e31\u0e27\u0e40\u0e1b\u0e47\u0e19 integer \u0e0a\u0e37\u0e48\u0e2d\u0e27\u0e48\u0e32 \\(f\\) (\u0e22\u0e48\u0e2d\u0e08\u0e32\u0e01 first) \u0e42\u0e14\u0e22 \\(f\\) \u0e08\u0e30\u0e40\u0e01\u0e47\u0e1a\u0e27\u0e48\u0e32 \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e08\u0e31\u0e14\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e23\u0e2d\u0e1a\u0e19\u0e35\u0e49 \u0e25\u0e39\u0e01\u0e04\u0e49\u0e32\u0e04\u0e19\u0e41\u0e23\u0e01\u0e17\u0e35\u0e48\u0e40\u0e23\u0e32\u0e08\u0e31\u0e14\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e43\u0e2b\u0e49\u0e04\u0e37\u0e2d\u0e25\u0e39\u0e01\u0e04\u0e49\u0e32\u0e04\u0e19\u0e17\u0e35\u0e48\u0e40\u0e17\u0e48\u0e32\u0e44\u0e2b\u0e23\u0e48  </p> <p>\u0e42\u0e14\u0e22\u0e15\u0e2d\u0e19\u0e17\u0e35\u0e48\u0e40\u0e23\u0e32\u0e2b\u0e32 root \u0e02\u0e2d\u0e07 \\(X\\) \u0e40\u0e23\u0e32\u0e08\u0e30\u0e40\u0e0a\u0e47\u0e01\u0e43\u0e19 auxiliary array \u0e19\u0e31\u0e49\u0e19\u0e01\u0e48\u0e2d\u0e19\u0e27\u0e48\u0e32 \u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e17\u0e35\u0e48\u0e40\u0e23\u0e32\u0e08\u0e30\u0e27\u0e32\u0e07\u0e43\u0e19\u0e0a\u0e31\u0e49\u0e19\u0e27\u0e32\u0e07\u0e17\u0e35\u0e48 \\(X\\) \u0e19\u0e31\u0e49\u0e19 \u0e40\u0e1b\u0e47\u0e19\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e02\u0e2d\u0e07\u0e43\u0e04\u0e23 \u0e16\u0e49\u0e32\u0e2b\u0e32\u0e01\u0e27\u0e48\u0e32\u0e40\u0e1b\u0e47\u0e19\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e02\u0e2d\u0e07\u0e25\u0e39\u0e01\u0e04\u0e49\u0e32\u0e17\u0e35\u0e48\u0e2b\u0e21\u0e32\u0e22\u0e40\u0e25\u0e02\u0e19\u0e49\u0e2d\u0e22\u0e01\u0e27\u0e48\u0e32 \\(f\\) (<code>aux[X] &lt; f</code>) \u0e01\u0e47\u0e41\u0e2a\u0e14\u0e07\u0e27\u0e48\u0e32\u0e40\u0e23\u0e32\u0e44\u0e21\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e2a\u0e19\u0e43\u0e08\u0e25\u0e39\u0e01\u0e04\u0e49\u0e32\u0e04\u0e19\u0e19\u0e31\u0e49\u0e19\u0e41\u0e25\u0e49\u0e27 \u0e40\u0e1e\u0e23\u0e32\u0e30\u0e27\u0e48\u0e32\u0e25\u0e39\u0e01\u0e04\u0e49\u0e32\u0e04\u0e19\u0e19\u0e31\u0e49\u0e19\u0e44\u0e14\u0e49\u0e23\u0e31\u0e1a\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e44\u0e1b\u0e41\u0e25\u0e49\u0e27 \u0e41\u0e25\u0e30\u0e40\u0e23\u0e32\u0e01\u0e33\u0e25\u0e31\u0e07\u0e08\u0e30\u0e08\u0e31\u0e14\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32\u0e1a\u0e19\u0e0a\u0e31\u0e49\u0e19\u0e27\u0e32\u0e07\u0e43\u0e2b\u0e21\u0e48\u0e2d\u0e35\u0e01\u0e23\u0e2d\u0e1a  </p> <p>\u0e0b\u0e36\u0e48\u0e07\u0e08\u0e30\u0e17\u0e33\u0e43\u0e2b\u0e49 time complexity \u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14\u0e25\u0e14\u0e40\u0e2b\u0e25\u0e37\u0e2d \\(O(n)\\) \u0e19\u0e31\u0e48\u0e19\u0e40\u0e2d\u0e07  </p>","tags":["TOI","Bruteforce","Disjoint Set Union","Hard"]},{"location":"problems/toi21_duty_free/#summary","title":"Summary","text":"<ul> <li>\u0e43\u0e0a\u0e49 Greedy Algorithm \u0e43\u0e19\u0e01\u0e32\u0e23\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e0a\u0e48\u0e2d\u0e07\u0e17\u0e35\u0e48\u0e08\u0e30\u0e27\u0e32\u0e07\u0e01\u0e23\u0e30\u0e40\u0e1b\u0e4b\u0e32  </li> <li>\u0e43\u0e0a\u0e49 Disjoint Set Union \u0e43\u0e19\u0e01\u0e32\u0e23 optimize \u0e42\u0e04\u0e49\u0e14  </li> </ul>","tags":["TOI","Bruteforce","Disjoint Set Union","Hard"]},{"location":"problems/toi21_duty_free/#code","title":"Code","text":"toi21_duty_free.cpp<pre><code>#include &lt;bits/stdc++.h&gt;\n\nusing namespace std;\n\nconst int N = 2e6 + 5;\n\nint i, f, aux[N], par[N];\n\nint dsu(int x){\n    if (aux[x] &lt; f) {\n        aux[x] = i;\n        par[x] = x;\n    }\n    return par[x] = (par[x] == x ? x : dsu(par[x]));\n}\n\nint minimum_bag_rearrangement_time(vector&lt;int&gt; max_allowed_positions){\n    int n  = max_allowed_positions.size(); \n    f = 1;\n    iota(par, par + N, 0);\n    memset(aux, -1, sizeof aux);\n    int ans = 0;\n    for (i = 1; i &lt;= n; i++) {\n        int x = dsu(max_allowed_positions[i - 1]);\n        if (x &lt;= 0) {\n            ans++, f = i;\n            x = dsu(max_allowed_positions[i - 1]);\n        }\n        par[x] = dsu(x - 1);\n    }\n    return ans;\n}\n</code></pre> <p>Total Time Complexity</p> <p>\\(O(N)\\)</p> <p>\u0e2b\u0e32\u0e01\u0e21\u0e35\u0e02\u0e49\u0e2d\u0e2a\u0e07\u0e2a\u0e31\u0e22 comment \u0e44\u0e27\u0e49\u0e43\u0e15\u0e49 post \u0e44\u0e14\u0e49\u0e40\u0e25\u0e22\u0e19\u0e30\u0e04\u0e23\u0e31\u0e1a \ud83d\ude47\u200d\u2642\ufe0f\ud83d\ude47\u200d\u2642\ufe0f</p>","tags":["TOI","Bruteforce","Disjoint Set Union","Hard"]}]}